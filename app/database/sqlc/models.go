// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package sqlc

import (
	"database/sql"
)

type Admin struct {
	ID              string      `json:"id"`
	Avatar          int64       `json:"avatar"`
	Email           string      `json:"email"`
	Tokenkey        string      `json:"tokenkey"`
	Passwordhash    string      `json:"passwordhash"`
	Lastresetsentat interface{} `json:"lastresetsentat"`
	Created         string      `json:"created"`
	Updated         string      `json:"updated"`
}

type Collection struct {
	ID         string         `json:"id"`
	System     bool           `json:"system"`
	Type       interface{}    `json:"type"`
	Name       string         `json:"name"`
	Schema     interface{}    `json:"schema"`
	Indexes    interface{}    `json:"indexes"`
	Listrule   sql.NullString `json:"listrule"`
	Viewrule   sql.NullString `json:"viewrule"`
	Createrule sql.NullString `json:"createrule"`
	Updaterule sql.NullString `json:"updaterule"`
	Deleterule sql.NullString `json:"deleterule"`
	Options    interface{}    `json:"options"`
	Created    string         `json:"created"`
	Updated    string         `json:"updated"`
}

type Comment struct {
	Author  string `json:"author"`
	Created string `json:"created"`
	ID      string `json:"id"`
	Message string `json:"message"`
	Ticket  string `json:"ticket"`
	Updated string `json:"updated"`
}

type DashboardCount struct {
	ID    string `json:"id"`
	Count int64  `json:"count"`
}

type Externalauth struct {
	ID           string `json:"id"`
	Collectionid string `json:"collectionid"`
	Recordid     string `json:"recordid"`
	Provider     string `json:"provider"`
	Providerid   string `json:"providerid"`
	Created      string `json:"created"`
	Updated      string `json:"updated"`
}

type Feature struct {
	Created string `json:"created"`
	ID      string `json:"id"`
	Name    string `json:"name"`
	Updated string `json:"updated"`
}

type File struct {
	Blob    string  `json:"blob"`
	Created string  `json:"created"`
	ID      string  `json:"id"`
	Name    string  `json:"name"`
	Size    float64 `json:"size"`
	Ticket  string  `json:"ticket"`
	Updated string  `json:"updated"`
}

type Link struct {
	Created string `json:"created"`
	ID      string `json:"id"`
	Name    string `json:"name"`
	Ticket  string `json:"ticket"`
	Updated string `json:"updated"`
	Url     string `json:"url"`
}

type Migration struct {
	File    string `json:"file"`
	Applied int64  `json:"applied"`
}

type Param struct {
	ID      string      `json:"id"`
	Key     string      `json:"key"`
	Value   interface{} `json:"value"`
	Created interface{} `json:"created"`
	Updated interface{} `json:"updated"`
}

type Reaction struct {
	Action      string `json:"action"`
	Actiondata  string `json:"actiondata"`
	Created     string `json:"created"`
	ID          string `json:"id"`
	Name        string `json:"name"`
	Trigger     string `json:"trigger"`
	Triggerdata string `json:"triggerdata"`
	Updated     string `json:"updated"`
}

type Role struct {
	ID          string `json:"id"`
	Name        string `json:"name"`
	Permissions string `json:"permissions"`
	Created     string `json:"created"`
	Updated     string `json:"updated"`
}

type RoleEffectivePermission struct {
	ParentRoleID string `json:"parent_role_id"`
	Permission   string `json:"permission"`
}

type RoleEffectiveRole struct {
	ChildRoleID  string `json:"child_role_id"`
	ParentRoleID string `json:"parent_role_id"`
	RoleType     string `json:"role_type"`
}

type RoleInheritance struct {
	ParentRoleID string `json:"parent_role_id"`
	ChildRoleID  string `json:"child_role_id"`
}

type Session struct {
	Token  string `json:"token"`
	Data   []byte `json:"data"`
	Expiry int64  `json:"expiry"`
}

type Sidebar struct {
	ID       string `json:"id"`
	Singular string `json:"singular"`
	Plural   string `json:"plural"`
	Icon     string `json:"icon"`
	Count    int64  `json:"count"`
}

type Task struct {
	Created string `json:"created"`
	ID      string `json:"id"`
	Name    string `json:"name"`
	Open    bool   `json:"open"`
	Owner   string `json:"owner"`
	Ticket  string `json:"ticket"`
	Updated string `json:"updated"`
}

type Ticket struct {
	Created     string `json:"created"`
	Description string `json:"description"`
	ID          string `json:"id"`
	Name        string `json:"name"`
	Open        bool   `json:"open"`
	Owner       string `json:"owner"`
	Resolution  string `json:"resolution"`
	Schema      string `json:"schema"`
	State       string `json:"state"`
	Type        string `json:"type"`
	Updated     string `json:"updated"`
}

type TicketSearch struct {
	ID               string         `json:"id"`
	Name             string         `json:"name"`
	Created          string         `json:"created"`
	Description      string         `json:"description"`
	Open             bool           `json:"open"`
	Type             string         `json:"type"`
	State            string         `json:"state"`
	OwnerName        sql.NullString `json:"owner_name"`
	CommentMessages  string         `json:"comment_messages"`
	FileNames        string         `json:"file_names"`
	LinkNames        string         `json:"link_names"`
	LinkUrls         string         `json:"link_urls"`
	TaskNames        string         `json:"task_names"`
	TimelineMessages string         `json:"timeline_messages"`
}

type Timeline struct {
	Created string `json:"created"`
	ID      string `json:"id"`
	Message string `json:"message"`
	Ticket  string `json:"ticket"`
	Time    string `json:"time"`
	Updated string `json:"updated"`
}

type Type struct {
	Created  string `json:"created"`
	Icon     string `json:"icon"`
	ID       string `json:"id"`
	Plural   string `json:"plural"`
	Schema   string `json:"schema"`
	Singular string `json:"singular"`
	Updated  string `json:"updated"`
}

type User struct {
	Avatar                 string `json:"avatar"`
	Created                string `json:"created"`
	Email                  string `json:"email"`
	Emailvisibility        bool   `json:"emailvisibility"`
	ID                     string `json:"id"`
	Lastloginalertsentat   string `json:"lastloginalertsentat"`
	Lastresetsentat        string `json:"lastresetsentat"`
	Lastverificationsentat string `json:"lastverificationsentat"`
	Name                   string `json:"name"`
	Passwordhash           string `json:"passwordhash"`
	Tokenkey               string `json:"tokenkey"`
	Updated                string `json:"updated"`
	Username               string `json:"username"`
	Verified               bool   `json:"verified"`
}

type UserEffectivePermission struct {
	UserID     string `json:"user_id"`
	Permission string `json:"permission"`
}

type UserEffectiveRole struct {
	UserID   string `json:"user_id"`
	RoleID   string `json:"role_id"`
	RoleType string `json:"role_type"`
}

type UserRole struct {
	UserID string `json:"user_id"`
	RoleID string `json:"role_id"`
}

type Webhook struct {
	Collection  string `json:"collection"`
	Created     string `json:"created"`
	Destination string `json:"destination"`
	ID          string `json:"id"`
	Name        string `json:"name"`
	Updated     string `json:"updated"`
}
