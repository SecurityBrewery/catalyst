/* tslint:disable */
/* eslint-disable */
/**
 * Ticketing System API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TypeUpdate
 */
export interface TypeUpdate {
    /**
     * 
     * @type {string}
     * @memberof TypeUpdate
     */
    icon?: string;
    /**
     * 
     * @type {string}
     * @memberof TypeUpdate
     */
    plural?: string;
    /**
     * 
     * @type {object}
     * @memberof TypeUpdate
     */
    schema?: object;
    /**
     * 
     * @type {string}
     * @memberof TypeUpdate
     */
    singular?: string;
}

/**
 * Check if a given object implements the TypeUpdate interface.
 */
export function instanceOfTypeUpdate(value: object): value is TypeUpdate {
    return true;
}

export function TypeUpdateFromJSON(json: any): TypeUpdate {
    return TypeUpdateFromJSONTyped(json, false);
}

export function TypeUpdateFromJSONTyped(json: any, ignoreDiscriminator: boolean): TypeUpdate {
    if (json == null) {
        return json;
    }
    return {
        
        'icon': json['icon'] == null ? undefined : json['icon'],
        'plural': json['plural'] == null ? undefined : json['plural'],
        'schema': json['schema'] == null ? undefined : json['schema'],
        'singular': json['singular'] == null ? undefined : json['singular'],
    };
}

export function TypeUpdateToJSON(json: any): TypeUpdate {
    return TypeUpdateToJSONTyped(json, false);
}

export function TypeUpdateToJSONTyped(value?: TypeUpdate | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'icon': value['icon'],
        'plural': value['plural'],
        'schema': value['schema'],
        'singular': value['singular'],
    };
}

