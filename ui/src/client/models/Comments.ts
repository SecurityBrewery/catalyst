/* tslint:disable */

/* eslint-disable */

/**
 * Ticketing System API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { mapValues } from '../runtime'

/**
 *
 * @export
 * @interface Comments
 */
export interface Comments {
  /**
   *
   * @type {string}
   * @memberof Comments
   */
  author: string
  /**
   *
   * @type {string}
   * @memberof Comments
   */
  created: string
  /**
   *
   * @type {string}
   * @memberof Comments
   */
  id: string
  /**
   *
   * @type {string}
   * @memberof Comments
   */
  message: string
  /**
   *
   * @type {string}
   * @memberof Comments
   */
  ticket: string
  /**
   *
   * @type {string}
   * @memberof Comments
   */
  updated: string
}

/**
 * Check if a given object implements the Comments interface.
 */
export function instanceOfComments(value: object): value is Comments {
  if (!('author' in value) || value['author'] === undefined) return false
  if (!('created' in value) || value['created'] === undefined) return false
  if (!('id' in value) || value['id'] === undefined) return false
  if (!('message' in value) || value['message'] === undefined) return false
  if (!('ticket' in value) || value['ticket'] === undefined) return false
  if (!('updated' in value) || value['updated'] === undefined) return false
  return true
}

export function CommentsFromJSON(json: any): Comments {
  return CommentsFromJSONTyped(json, false)
}

export function CommentsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Comments {
  if (json == null) {
    return json
  }
  return {
    author: json['author'],
    created: json['created'],
    id: json['id'],
    message: json['message'],
    ticket: json['ticket'],
    updated: json['updated']
  }
}

export function CommentsToJSON(json: any): Comments {
  return CommentsToJSONTyped(json, false)
}

export function CommentsToJSONTyped(
  value?: Comments | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value
  }

  return {
    author: value['author'],
    created: value['created'],
    id: value['id'],
    message: value['message'],
    ticket: value['ticket'],
    updated: value['updated']
  }
}
