/* tslint:disable */

/* eslint-disable */

/**
 * Ticketing System API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { mapValues } from '../runtime'

/**
 *
 * @export
 * @interface UserRole
 */
export interface UserRole {
  /**
   *
   * @type {string}
   * @memberof UserRole
   */
  id: string
  /**
   *
   * @type {string}
   * @memberof UserRole
   */
  name: string
  /**
   *
   * @type {Array<string>}
   * @memberof UserRole
   */
  permissions: Array<string>
  /**
   *
   * @type {string}
   * @memberof UserRole
   */
  type: string
  /**
   *
   * @type {string}
   * @memberof UserRole
   */
  created: string
  /**
   *
   * @type {string}
   * @memberof UserRole
   */
  updated: string
}

/**
 * Check if a given object implements the UserRole interface.
 */
export function instanceOfUserRole(value: object): value is UserRole {
  if (!('id' in value) || value['id'] === undefined) return false
  if (!('name' in value) || value['name'] === undefined) return false
  if (!('permissions' in value) || value['permissions'] === undefined) return false
  if (!('type' in value) || value['type'] === undefined) return false
  if (!('created' in value) || value['created'] === undefined) return false
  if (!('updated' in value) || value['updated'] === undefined) return false
  return true
}

export function UserRoleFromJSON(json: any): UserRole {
  return UserRoleFromJSONTyped(json, false)
}

export function UserRoleFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserRole {
  if (json == null) {
    return json
  }
  return {
    id: json['id'],
    name: json['name'],
    permissions: json['permissions'],
    type: json['type'],
    created: json['created'],
    updated: json['updated']
  }
}

export function UserRoleToJSON(json: any): UserRole {
  return UserRoleToJSONTyped(json, false)
}

export function UserRoleToJSONTyped(
  value?: UserRole | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value
  }

  return {
    id: value['id'],
    name: value['name'],
    permissions: value['permissions'],
    type: value['type'],
    created: value['created'],
    updated: value['updated']
  }
}
