/* tslint:disable */

/* eslint-disable */

/**
 * Ticketing System API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { mapValues } from '../runtime'

/**
 *
 * @export
 * @interface ExtendedFile
 */
export interface ExtendedFile {
  /**
   *
   * @type {string}
   * @memberof ExtendedFile
   */
  id: string
  /**
   *
   * @type {string}
   * @memberof ExtendedFile
   */
  ticket: string
  /**
   *
   * @type {Blob}
   * @memberof ExtendedFile
   */
  blob: Blob
  /**
   *
   * @type {string}
   * @memberof ExtendedFile
   */
  name: string
  /**
   *
   * @type {number}
   * @memberof ExtendedFile
   */
  size: number
  /**
   *
   * @type {string}
   * @memberof ExtendedFile
   */
  created: string
  /**
   *
   * @type {string}
   * @memberof ExtendedFile
   */
  updated: string
}

/**
 * Check if a given object implements the ExtendedFile interface.
 */
export function instanceOfExtendedFile(value: object): value is ExtendedFile {
  if (!('id' in value) || value['id'] === undefined) return false
  if (!('ticket' in value) || value['ticket'] === undefined) return false
  if (!('blob' in value) || value['blob'] === undefined) return false
  if (!('name' in value) || value['name'] === undefined) return false
  if (!('size' in value) || value['size'] === undefined) return false
  if (!('created' in value) || value['created'] === undefined) return false
  if (!('updated' in value) || value['updated'] === undefined) return false
  return true
}

export function ExtendedFileFromJSON(json: any): ExtendedFile {
  return ExtendedFileFromJSONTyped(json, false)
}

export function ExtendedFileFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExtendedFile {
  if (json == null) {
    return json
  }
  return {
    id: json['id'],
    ticket: json['ticket'],
    blob: json['blob'],
    name: json['name'],
    size: json['size'],
    created: json['created'],
    updated: json['updated']
  }
}

export function ExtendedFileToJSON(json: any): ExtendedFile {
  return ExtendedFileToJSONTyped(json, false)
}

export function ExtendedFileToJSONTyped(
  value?: ExtendedFile | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value
  }

  return {
    id: value['id'],
    ticket: value['ticket'],
    blob: value['blob'],
    name: value['name'],
    size: value['size'],
    created: value['created'],
    updated: value['updated']
  }
}
