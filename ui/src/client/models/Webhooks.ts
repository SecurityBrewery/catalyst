/* tslint:disable */
/* eslint-disable */
/**
 * Ticketing System API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Webhooks
 */
export interface Webhooks {
    /**
     * 
     * @type {string}
     * @memberof Webhooks
     */
    collection: string;
    /**
     * 
     * @type {string}
     * @memberof Webhooks
     */
    created: string;
    /**
     * 
     * @type {string}
     * @memberof Webhooks
     */
    destination: string;
    /**
     * 
     * @type {string}
     * @memberof Webhooks
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Webhooks
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Webhooks
     */
    updated: string;
}

/**
 * Check if a given object implements the Webhooks interface.
 */
export function instanceOfWebhooks(value: object): value is Webhooks {
    if (!('collection' in value) || value['collection'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    if (!('destination' in value) || value['destination'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('updated' in value) || value['updated'] === undefined) return false;
    return true;
}

export function WebhooksFromJSON(json: any): Webhooks {
    return WebhooksFromJSONTyped(json, false);
}

export function WebhooksFromJSONTyped(json: any, ignoreDiscriminator: boolean): Webhooks {
    if (json == null) {
        return json;
    }
    return {
        
        'collection': json['collection'],
        'created': json['created'],
        'destination': json['destination'],
        'id': json['id'],
        'name': json['name'],
        'updated': json['updated'],
    };
}

export function WebhooksToJSON(json: any): Webhooks {
    return WebhooksToJSONTyped(json, false);
}

export function WebhooksToJSONTyped(value?: Webhooks | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'collection': value['collection'],
        'created': value['created'],
        'destination': value['destination'],
        'id': value['id'],
        'name': value['name'],
        'updated': value['updated'],
    };
}

