/* tslint:disable */
/* eslint-disable */
/**
 * Ticketing System API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { mapValues } from '../runtime'
import type { S3Config } from './S3Config'
import {
  S3ConfigFromJSON,
  S3ConfigFromJSONTyped,
  S3ConfigToJSON,
  S3ConfigToJSONTyped
} from './S3Config'

/**
 *
 * @export
 * @interface SettingsBackups
 */
export interface SettingsBackups {
  /**
   *
   * @type {string}
   * @memberof SettingsBackups
   */
  cron: string
  /**
   *
   * @type {number}
   * @memberof SettingsBackups
   */
  cronMaxKeep: number
  /**
   *
   * @type {S3Config}
   * @memberof SettingsBackups
   */
  s3: S3Config
}

/**
 * Check if a given object implements the SettingsBackups interface.
 */
export function instanceOfSettingsBackups(value: object): value is SettingsBackups {
  if (!('cron' in value) || value['cron'] === undefined) return false
  if (!('cronMaxKeep' in value) || value['cronMaxKeep'] === undefined) return false
  if (!('s3' in value) || value['s3'] === undefined) return false
  return true
}

export function SettingsBackupsFromJSON(json: any): SettingsBackups {
  return SettingsBackupsFromJSONTyped(json, false)
}

export function SettingsBackupsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): SettingsBackups {
  if (json == null) {
    return json
  }
  return {
    cron: json['cron'],
    cronMaxKeep: json['cron_max_keep'],
    s3: S3ConfigFromJSON(json['s3'])
  }
}

export function SettingsBackupsToJSON(json: any): SettingsBackups {
  return SettingsBackupsToJSONTyped(json, false)
}

export function SettingsBackupsToJSONTyped(
  value?: SettingsBackups | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value
  }

  return {
    cron: value['cron'],
    cron_max_keep: value['cronMaxKeep'],
    s3: S3ConfigToJSON(value['s3'])
  }
}
