/* tslint:disable */
/* eslint-disable */
/**
 * Ticketing System API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { mapValues } from '../runtime'
import type { EmailTemplate } from './EmailTemplate'
import {
  EmailTemplateFromJSON,
  EmailTemplateFromJSONTyped,
  EmailTemplateToJSON,
  EmailTemplateToJSONTyped
} from './EmailTemplate'

/**
 *
 * @export
 * @interface SettingsMeta
 */
export interface SettingsMeta {
  /**
   *
   * @type {string}
   * @memberof SettingsMeta
   */
  appName: string
  /**
   *
   * @type {string}
   * @memberof SettingsMeta
   */
  appUrl: string
  /**
   *
   * @type {boolean}
   * @memberof SettingsMeta
   */
  hideControls: boolean
  /**
   *
   * @type {string}
   * @memberof SettingsMeta
   */
  senderName: string
  /**
   *
   * @type {string}
   * @memberof SettingsMeta
   */
  senderAddress: string
  /**
   *
   * @type {EmailTemplate}
   * @memberof SettingsMeta
   */
  verificationTemplate: EmailTemplate
  /**
   *
   * @type {EmailTemplate}
   * @memberof SettingsMeta
   */
  resetPasswordTemplate: EmailTemplate
  /**
   *
   * @type {EmailTemplate}
   * @memberof SettingsMeta
   */
  confirmEmailChangeTemplate: EmailTemplate
}

/**
 * Check if a given object implements the SettingsMeta interface.
 */
export function instanceOfSettingsMeta(value: object): value is SettingsMeta {
  if (!('appName' in value) || value['appName'] === undefined) return false
  if (!('appUrl' in value) || value['appUrl'] === undefined) return false
  if (!('hideControls' in value) || value['hideControls'] === undefined) return false
  if (!('senderName' in value) || value['senderName'] === undefined) return false
  if (!('senderAddress' in value) || value['senderAddress'] === undefined) return false
  if (!('verificationTemplate' in value) || value['verificationTemplate'] === undefined)
    return false
  if (!('resetPasswordTemplate' in value) || value['resetPasswordTemplate'] === undefined)
    return false
  if (!('confirmEmailChangeTemplate' in value) || value['confirmEmailChangeTemplate'] === undefined)
    return false
  return true
}

export function SettingsMetaFromJSON(json: any): SettingsMeta {
  return SettingsMetaFromJSONTyped(json, false)
}

export function SettingsMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): SettingsMeta {
  if (json == null) {
    return json
  }
  return {
    appName: json['app_name'],
    appUrl: json['app_url'],
    hideControls: json['hide_controls'],
    senderName: json['sender_name'],
    senderAddress: json['sender_address'],
    verificationTemplate: EmailTemplateFromJSON(json['verification_template']),
    resetPasswordTemplate: EmailTemplateFromJSON(json['reset_password_template']),
    confirmEmailChangeTemplate: EmailTemplateFromJSON(json['confirm_email_change_template'])
  }
}

export function SettingsMetaToJSON(json: any): SettingsMeta {
  return SettingsMetaToJSONTyped(json, false)
}

export function SettingsMetaToJSONTyped(
  value?: SettingsMeta | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value
  }

  return {
    app_name: value['appName'],
    app_url: value['appUrl'],
    hide_controls: value['hideControls'],
    sender_name: value['senderName'],
    sender_address: value['senderAddress'],
    verification_template: EmailTemplateToJSON(value['verificationTemplate']),
    reset_password_template: EmailTemplateToJSON(value['resetPasswordTemplate']),
    confirm_email_change_template: EmailTemplateToJSON(value['confirmEmailChangeTemplate'])
  }
}
