{
  "openapi" : "3.0.1",
  "info" : {
    "description" : "API for the catalyst incident response platform.",
    "title" : "",
    "version" : ""
  },
  "servers" : [ {
    "url" : "http://./api"
  } ],
  "paths" : {
    "/automations" : {
      "get" : {
        "operationId" : "listAutomations",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/AutomationResponse"
                  },
                  "type" : "array"
                }
              },
              "test" : {
                "example" : [ {
                  "id" : "comment",
                  "image" : "docker.io/python:3",
                  "script" : "",
                  "type" : [ "playbook" ]
                }, {
                  "id" : "hash.sha1",
                  "image" : "docker.io/python:3",
                  "schema" : "{\"title\":\"Input\",\"type\":\"object\",\"properties\":{\"default\":{\"type\":\"string\",\"title\":\"Value\"}},\"required\":[\"default\"]}",
                  "script" : "",
                  "type" : [ "global", "artifact", "playbook" ]
                }, {
                  "id" : "thehive",
                  "image" : "docker.io/python:3",
                  "schema" : "{\"title\":\"TheHive credentials\",\"type\":\"object\",\"properties\":{\"thehiveurl\":{\"type\":\"string\",\"title\":\"TheHive URL (e.g. 'https://thehive.example.org')\"},\"thehivekey\":{\"type\":\"string\",\"title\":\"TheHive API Key\"},\"skip_files\":{\"type\":\"boolean\", \"default\": true, \"title\":\"Skip Files (much faster)\"},\"keep_ids\":{\"type\":\"boolean\", \"default\": true, \"title\":\"Keep IDs and overwrite existing IDs\"}},\"required\":[\"thehiveurl\", \"thehivekey\", \"skip_files\", \"keep_ids\"]}",
                  "script" : "",
                  "type" : [ "global" ]
                }, {
                  "id" : "vt.hash",
                  "image" : "docker.io/python:3",
                  "schema" : "{\"title\":\"Input\",\"type\":\"object\",\"properties\":{\"default\":{\"type\":\"string\",\"title\":\"Value\"}},\"required\":[\"default\"]}",
                  "script" : "",
                  "type" : [ "global", "artifact", "playbook" ]
                } ]
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "automation:read" ]
        } ],
        "summary" : "List automations",
        "tags" : [ "automations" ]
      },
      "post" : {
        "operationId" : "createAutomation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AutomationForm"
              }
            }
          },
          "description" : "New automation",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AutomationResponse"
                }
              },
              "test" : {
                "example" : {
                  "id" : "hash-sha-256",
                  "image" : "docker.io/python:3",
                  "script" : "import sys\nimport json\nimport hashlib\n\n\ndef run(msg):\n    sha256 = hashlib.sha256(msg['payload']['default'].encode('utf-8'))\n    return {'hash': sha256.hexdigest()}\n\n\nprint(json.dumps(run(json.loads(sys.argv[1]))))\n",
                  "type" : [ "global" ]
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "automation:write" ]
        } ],
        "summary" : "Create a new automation",
        "tags" : [ "automations" ],
        "x-codegen-request-body-name" : "automation"
      }
    },
    "/automations/{id}" : {
      "delete" : {
        "operationId" : "deleteAutomation",
        "parameters" : [ {
          "description" : "Automation ID",
          "example" : "hash.sha1",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "content" : { },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "automation:write" ]
        } ],
        "summary" : "Delete a automation",
        "tags" : [ "automations" ]
      },
      "get" : {
        "operationId" : "getAutomation",
        "parameters" : [ {
          "description" : "Automation ID",
          "example" : "hash.sha1",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AutomationResponse"
                }
              },
              "test" : {
                "example" : {
                  "id" : "hash.sha1",
                  "image" : "docker.io/python:3",
                  "schema" : "{\"title\":\"Input\",\"type\":\"object\",\"properties\":{\"default\":{\"type\":\"string\",\"title\":\"Value\"}},\"required\":[\"default\"]}",
                  "script" : "#!/usr/bin/env python\n\nimport sys\nimport json\nimport hashlib\n\n\ndef run(msg):\n    sha1 = hashlib.sha1(msg['payload']['default'].encode('utf-8'))\n    return {\"hash\": sha1.hexdigest()}\n\n\nprint(json.dumps(run(json.loads(sys.argv[1]))))\n",
                  "type" : [ "global", "artifact", "playbook" ]
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "automation:read" ]
        } ],
        "summary" : "Get a single automation",
        "tags" : [ "automations" ]
      },
      "put" : {
        "operationId" : "updateAutomation",
        "parameters" : [ {
          "description" : "Automation ID",
          "example" : "hash.sha1",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AutomationForm"
              }
            }
          },
          "description" : "Automation object that needs to be added",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AutomationResponse"
                }
              },
              "test" : {
                "example" : {
                  "id" : "hash.sha1",
                  "image" : "docker.io/python:3",
                  "script" : "import sys\nimport json\nimport hashlib\n\n\ndef run(msg):\n    sha1 = hashlib.sha1(msg['payload'].encode('utf-8'))\n    return {'hash': sha1.hexdigest()}\n\n\nprint(json.dumps(run(json.loads(sys.argv[1]))))\n",
                  "type" : [ "global", "artifact", "playbook" ]
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "automation:write" ]
        } ],
        "summary" : "Update an existing automation",
        "tags" : [ "automations" ],
        "x-codegen-request-body-name" : "automation"
      }
    },
    "/currentuser" : {
      "get" : {
        "operationId" : "currentUser",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponse"
                }
              },
              "test" : {
                "example" : {
                  "apikey" : false,
                  "blocked" : false,
                  "id" : "bob",
                  "roles" : [ "admin:backup:read", "admin:backup:restore", "admin:group:write", "admin:job:read", "admin:job:write", "admin:log:read", "admin:ticket:delete", "admin:user:write", "admin:userdata:read", "admin:userdata:write", "analyst:automation:read", "analyst:currentsettings:write", "analyst:currentuser:read", "analyst:currentuserdata:read", "analyst:file", "analyst:group:read", "analyst:playbook:read", "analyst:rule:read", "analyst:settings:read", "analyst:template:read", "analyst:ticket:read", "analyst:ticket:write", "analyst:tickettype:read", "analyst:user:read", "engineer:automation:write", "engineer:playbook:write", "engineer:rule:write", "engineer:template:write", "engineer:tickettype:write" ]
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "currentuser:read" ]
        } ],
        "summary" : "Get current user",
        "tags" : [ "users" ]
      }
    },
    "/currentuserdata" : {
      "get" : {
        "operationId" : "currentUserData",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDataResponse"
                }
              },
              "test" : {
                "example" : {
                  "email" : "bob@example.org",
                  "id" : "bob",
                  "name" : "Bob Bad"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "currentuserdata:read" ]
        } ],
        "summary" : "Get current user data",
        "tags" : [ "userdata" ]
      },
      "put" : {
        "operationId" : "updateCurrentUserData",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserData"
              }
            }
          },
          "description" : "User data object that needs to be added",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDataResponse"
                }
              },
              "test" : {
                "example" : {
                  "email" : "bob@example.org",
                  "id" : "bob",
                  "name" : "Bob Bad"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "currentuserdata:write" ]
        } ],
        "summary" : "Update current user data",
        "tags" : [ "userdata" ],
        "x-codegen-request-body-name" : "userdata"
      }
    },
    "/jobs" : {
      "get" : {
        "operationId" : "listJobs",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/JobResponse"
                  },
                  "type" : "array"
                }
              },
              "test" : {
                "example" : [ {
                  "automation" : "hash.sha1",
                  "id" : "99cd67131b48",
                  "payload" : "test",
                  "status" : "created"
                } ]
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "job:read" ]
        } ],
        "summary" : "List jobs",
        "tags" : [ "jobs" ]
      },
      "post" : {
        "operationId" : "runJob",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JobForm"
              }
            }
          },
          "description" : "New job",
          "required" : true
        },
        "responses" : {
          "204" : {
            "content" : { },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "job:write" ]
        } ],
        "summary" : "Start a new job",
        "tags" : [ "jobs" ],
        "x-codegen-request-body-name" : "job"
      }
    },
    "/jobs/{id}" : {
      "get" : {
        "operationId" : "getJob",
        "parameters" : [ {
          "description" : "Job ID",
          "example" : "99cd67131b48",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobResponse"
                }
              },
              "test" : {
                "example" : {
                  "automation" : "hash.sha1",
                  "id" : "99cd67131b48",
                  "payload" : "test",
                  "status" : "created"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "job:read" ]
        } ],
        "summary" : "Get a single job",
        "tags" : [ "jobs" ]
      },
      "put" : {
        "operationId" : "updateJob",
        "parameters" : [ {
          "description" : "Job ID",
          "example" : "99cd67131b48",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Job"
              }
            }
          },
          "description" : "Job object that needs to be added",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobResponse"
                }
              },
              "test" : {
                "example" : {
                  "automation" : "hash.sha1",
                  "id" : "99cd67131b48",
                  "payload" : "test",
                  "status" : "failed"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "job:write" ]
        } ],
        "summary" : "Update an existing job",
        "tags" : [ "jobs" ],
        "x-codegen-request-body-name" : "job"
      }
    },
    "/logs/{reference}" : {
      "get" : {
        "operationId" : "getLogs",
        "parameters" : [ {
          "description" : "Reference",
          "example" : "tickets%2F294511",
          "in" : "path",
          "name" : "reference",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/LogEntry"
                  },
                  "type" : "array"
                }
              },
              "test" : {
                "example" : [ {
                  "created" : "2021-10-02T16:05:00.334+0000",
                  "creator" : "bob",
                  "message" : "Fail run account resist lend solve incident centre priority temperature. Cause change distribution examine location technique shape partner milk customer. Rail tea plate soil report cook railway interpretation breath action. Exercise dream accept park conclusion addition shoot assistance may answer. Gold writer link stop combine hear power name commitment operation. Determine lifespan support grow degree henry exclude detail set religion. Direct library policy convention chain retain discover ride walk student. Gather proposal select march aspect play noise avoid encourage employ. Assessment preserve transport combine wish influence income guess run stand. Charge limit crime ignore statement foundation study issue stop claim.",
                  "reference" : "tickets/294511"
                } ]
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "log:read" ]
        } ],
        "summary" : "Get log entries",
        "tags" : [ "logs" ]
      }
    },
    "/playbooks" : {
      "get" : {
        "operationId" : "listPlaybooks",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/PlaybookTemplateResponse"
                  },
                  "type" : "array"
                }
              },
              "test" : {
                "example" : [ {
                  "id" : "malware",
                  "name" : "Malware",
                  "yaml" : "name: Malware\ntasks:\n  file-or-hash:\n    name: Do you have the file or the hash?\n    type: input\n    schema:\n      title: Malware\n      type: object\n      properties:\n        file:\n          type: string\n          title: \"I have the\"\n          enum: [ \"File\", \"Hash\" ]\n    next:\n      enter-hash: \"file == 'Hash'\"\n      upload: \"file == 'File'\"\n\n  enter-hash:\n    name: Please enter the hash\n    type: input\n    schema:\n      title: Malware\n      type: object\n      properties:\n        hash:\n          type: string\n          title: Please enter the hash value\n          minlength: 32\n    next:\n      virustotal: \"hash != ''\"\n\n  upload:\n    name: Upload the malware\n    type: input\n    schema:\n      title: Malware\n      type: object\n      properties:\n        malware:\n          type: object\n          x-display: file\n          title: Please upload the malware\n    next:\n      hash: \"malware\"\n\n  hash:\n    name: Hash the malware\n    type: automation\n    automation: hash.sha1\n    payload:\n      default: \"playbook.tasks['upload'].data['malware']\"\n    next:\n      virustotal:\n\n  virustotal:\n    name: Send hash to VirusTotal\n    type: automation\n    automation: vt.hash\n    args:\n      hash: \"playbook.tasks['enter-hash'].data['hash'] || playbook.tasks['hash'].data['hash']\"\n    # next:\n    #   known-malware: \"score > 5\"\n    #   sandbox: \"score < 6\" # unknown-malware\n"
                }, {
                  "id" : "phishing",
                  "name" : "Phishing",
                  "yaml" : "name: Phishing\ntasks:\n  board:\n    name: Board Involvement?\n    description: Is a board member involved?\n    type: input\n    schema:\n      properties:\n        boardInvolved:\n          default: false\n          title: A board member is involved.\n          type: boolean\n      required:\n        - boardInvolved\n      title: Board Involvement?\n      type: object\n    next:\n      escalate: \"boardInvolved == true\"\n      mail-available: \"boardInvolved == false\"\n\n  escalate:\n    name: Escalate to CISO\n    description: Please escalate the task to the CISO\n    type: task\n\n  mail-available:\n    name: Mail available\n    type: input\n    schema:\n      oneOf:\n        - properties:\n            mail:\n              title: Mail\n              type: string\n              x-display: textarea\n            schemaKey:\n              const: 'yes'\n              type: string\n          required:\n            - mail\n          title: 'Yes'\n        - properties:\n            schemaKey:\n              const: 'no'\n              type: string\n          title: 'No'\n      title: Mail available\n      type: object\n    next:\n      block-sender: \"schemaKey == 'yes'\"\n      extract-iocs: \"schemaKey == 'yes'\"\n      search-email-gateway: \"schemaKey == 'no'\"\n\n  search-email-gateway:\n    name: Search email gateway\n    description: Please search email-gateway for the phishing mail.\n    type: task\n    next:\n      extract-iocs:\n\n  block-sender:\n    name: Block sender\n    type: task\n    next:\n      extract-iocs:\n\n  extract-iocs:\n    name: Extract IOCs\n    description: Please insert the IOCs\n    type: input\n    schema:\n      properties:\n        iocs:\n          items:\n            type: string\n          title: IOCs\n          type: array\n      title: Extract IOCs\n      type: object\n    next:\n      block-iocs:\n\n  block-iocs:\n    name: Block IOCs\n    type: task\n"
                }, {
                  "id" : "simple",
                  "name" : "Simple",
                  "yaml" : "name: Simple\ntasks:\n  input:\n    name: Enter something to hash\n    type: input\n    schema:\n      title: Something\n      type: object\n      properties:\n        something:\n          type: string\n          title: Something\n          default: \"\"\n    next:\n      hash: \"something != ''\"\n\n  hash:\n    name: Hash the something\n    type: automation\n    automation: hash.sha1\n    payload:\n      default: \"playbook.tasks['input'].data['something']\"\n    next:\n      comment: \"hash != ''\"\n\n  comment:\n    name: Comment the hash\n    type: automation\n    automation: comment\n    payload:\n      default: \"playbook.tasks['hash'].data['hash']\"\n    next:\n      done: \"done\"\n\n  done:\n    name: You can close this case now\n    type: task\n"
                } ]
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "playbook:read" ]
        } ],
        "summary" : "List playbooks",
        "tags" : [ "playbooks" ]
      },
      "post" : {
        "operationId" : "createPlaybook",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PlaybookTemplateForm"
              }
            }
          },
          "description" : "New playbook",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/PlaybookTemplateResponse"
                  },
                  "type" : "array"
                }
              },
              "test" : {
                "example" : {
                  "id" : "simple-2",
                  "name" : "Simple2",
                  "yaml" : "name: Simple2\ntasks:\n  input:\n    name: Upload malware if possible\n    type: input\n    schema:\n      title: Malware\n      type: object\n      properties:\n        malware:\n          type: string\n          title: Select malware\n          default: \"\"\n    next:\n      hash: \"malware != ''\"\n\n  hash:\n    name: Hash the malware\n    type: automation\n    automation: hash.sha1\n    payload:\n      default: \"playbook.tasks['input'].data['malware']\"\n    next:\n      escalate:\n\n  escalate:\n    name: Escalate to malware team\n    type: task\n"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "playbook:write" ]
        } ],
        "summary" : "Create a playbook",
        "tags" : [ "playbooks" ],
        "x-codegen-request-body-name" : "playbook"
      }
    },
    "/playbooks/{id}" : {
      "delete" : {
        "operationId" : "deletePlaybook",
        "parameters" : [ {
          "description" : "Playbook name",
          "example" : "simple",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "content" : { },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "playbook:write" ]
        } ],
        "summary" : "Delete a playbook",
        "tags" : [ "playbooks" ]
      },
      "get" : {
        "operationId" : "getPlaybook",
        "parameters" : [ {
          "description" : "Playbook name",
          "example" : "simple",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PlaybookTemplateResponse"
                }
              },
              "test" : {
                "example" : {
                  "id" : "simple",
                  "name" : "Simple",
                  "yaml" : "name: Simple\ntasks:\n  input:\n    name: Enter something to hash\n    type: input\n    schema:\n      title: Something\n      type: object\n      properties:\n        something:\n          type: string\n          title: Something\n          default: \"\"\n    next:\n      hash: \"something != ''\"\n\n  hash:\n    name: Hash the something\n    type: automation\n    automation: hash.sha1\n    payload:\n      default: \"playbook.tasks['input'].data['something']\"\n    next:\n      comment: \"hash != ''\"\n\n  comment:\n    name: Comment the hash\n    type: automation\n    automation: comment\n    payload:\n      default: \"playbook.tasks['hash'].data['hash']\"\n    next:\n      done: \"done\"\n\n  done:\n    name: You can close this case now\n    type: task\n"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "playbook:read" ]
        } ],
        "summary" : "Get a single playbook",
        "tags" : [ "playbooks" ]
      },
      "put" : {
        "operationId" : "updatePlaybook",
        "parameters" : [ {
          "description" : "Playbook ID",
          "example" : "simple",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PlaybookTemplateForm"
              }
            }
          },
          "description" : "Updated playbook",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PlaybookTemplateResponse"
                }
              },
              "test" : {
                "example" : {
                  "id" : "simple",
                  "name" : "Simple",
                  "yaml" : "name: Simple\ntasks:\n  input:\n    name: Upload malware if possible\n    type: input\n    schema:\n      title: Malware\n      type: object\n      properties:\n        malware:\n          type: string\n          title: Select malware\n          default: \"\"\n    next:\n      hash: \"malware != ''\"\n\n  hash:\n    name: Hash the malware\n    type: automation\n    automation: hash.sha1\n    payload:\n      default: \"playbook.tasks['input'].data['malware']\"\n    next:\n      escalate:\n\n  escalate:\n    name: Escalate to malware team\n    type: task\n"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "playbook:write" ]
        } ],
        "summary" : "Update an existing ticket playbook",
        "tags" : [ "playbooks" ],
        "x-codegen-request-body-name" : "playbook"
      }
    },
    "/settings" : {
      "get" : {
        "operationId" : "getSettings",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Settings"
                }
              },
              "test" : {
                "example" : {
                  "artifactStates" : [ {
                    "color" : "info",
                    "icon" : "mdi-help-circle-outline",
                    "id" : "unknown",
                    "name" : "Unknown"
                  }, {
                    "color" : "error",
                    "icon" : "mdi-skull",
                    "id" : "malicious",
                    "name" : "Malicious"
                  }, {
                    "color" : "success",
                    "icon" : "mdi-check",
                    "id" : "clean",
                    "name" : "Clean"
                  } ],
                  "roles" : [ "admin:backup:read", "admin:backup:restore", "admin:group:write", "admin:job:read", "admin:job:write", "admin:log:read", "admin:ticket:delete", "admin:user:write", "admin:userdata:read", "admin:userdata:write", "analyst:automation:read", "analyst:currentsettings:write", "analyst:currentuser:read", "analyst:currentuserdata:read", "analyst:file", "analyst:group:read", "analyst:playbook:read", "analyst:rule:read", "analyst:settings:read", "analyst:template:read", "analyst:ticket:read", "analyst:ticket:write", "analyst:tickettype:read", "analyst:user:read", "engineer:automation:write", "engineer:playbook:write", "engineer:rule:write", "engineer:template:write", "engineer:tickettype:write" ],
                  "ticketTypes" : [ {
                    "default_playbooks" : [ ],
                    "default_template" : "default",
                    "icon" : "mdi-alert",
                    "id" : "alert",
                    "name" : "Alerts"
                  }, {
                    "default_playbooks" : [ ],
                    "default_template" : "default",
                    "icon" : "mdi-radioactive",
                    "id" : "incident",
                    "name" : "Incidents"
                  }, {
                    "default_playbooks" : [ ],
                    "default_template" : "default",
                    "icon" : "mdi-fingerprint",
                    "id" : "investigation",
                    "name" : "Forensic Investigations"
                  }, {
                    "default_playbooks" : [ ],
                    "default_template" : "default",
                    "icon" : "mdi-target",
                    "id" : "hunt",
                    "name" : "Threat Hunting"
                  } ],
                  "tier" : "community",
                  "timeformat" : "YYYY-MM-DDThh:mm:ss",
                  "version" : "0.0.0-test"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "settings:read" ]
        } ],
        "summary" : "Get settings",
        "tags" : [ "settings" ]
      }
    },
    "/statistics" : {
      "get" : {
        "operationId" : "getStatistics",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Statistics"
                }
              },
              "test" : {
                "example" : {
                  "open_tickets_per_user" : { },
                  "tickets_per_type" : {
                    "alert" : 2,
                    "incident" : 1
                  },
                  "tickets_per_week" : {
                    "2021-39" : 3
                  },
                  "unassigned" : 0
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "ticket:read" ]
        } ],
        "summary" : "Get statistics",
        "tags" : [ "statistics" ]
      }
    },
    "/tasks" : {
      "get" : {
        "operationId" : "listTasks",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/TaskResponse"
                  },
                  "type" : "array"
                }
              },
              "test" : {
                "example" : [ ]
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "ticket:read" ]
        } ],
        "summary" : "List tasks",
        "tags" : [ "tasks" ]
      }
    },
    "/templates" : {
      "get" : {
        "operationId" : "listTemplates",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/TicketTemplateResponse"
                  },
                  "type" : "array"
                }
              },
              "test" : {
                "example" : [ {
                  "id" : "default",
                  "name" : "Default",
                  "schema" : "{\n  \"definitions\": {},\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$id\": \"https://example.com/object1618746510.json\",\n  \"title\": \"Default\",\n  \"type\": \"object\",\n  \"required\": [\n    \"severity\",\n    \"description\",\n    \"tlp\"\n  ],\n  \"properties\": {\n    \"severity\": {\n      \"$id\": \"#root/severity\",\n      \"title\": \"Severity\",\n      \"type\": \"string\",\n      \"default\": \"Medium\",\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"Low\",\n          \"title\": \"Low\",\n          \"icon\": \"mdi-chevron-up\"\n        },\n        {\n          \"const\": \"Medium\",\n          \"title\": \"Medium\",\n          \"icon\": \"mdi-chevron-double-up\"\n        },\n        {\n          \"const\": \"High\",\n          \"title\": \"High\",\n          \"icon\": \"mdi-chevron-triple-up\"\n        }\n      ]\n    },\n    \"tlp\": {\n      \"$id\": \"#root/tlp\",\n      \"title\": \"TLP\",\n      \"type\": \"string\",\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"White\",\n          \"title\": \"White\",\n          \"icon\": \"mdi-alpha-w\"\n        },\n        {\n          \"const\": \"Green\",\n          \"title\": \"Green\",\n          \"icon\": \"mdi-alpha-g\"\n        },\n        {\n          \"const\": \"Amber\",\n          \"title\": \"Amber\",\n          \"icon\": \"mdi-alpha-a\"\n        },\n        {\n          \"const\": \"Red\",\n          \"title\": \"Red\",\n          \"icon\": \"mdi-alpha-r\"\n        }\n      ]\n    },\n    \"description\": {\n      \"$id\": \"#root/description\",\n      \"title\": \"Description\",\n      \"type\": \"string\",\n      \"x-display\": \"textarea\",\n      \"x-class\": \"pr-2\"\n    }\n  }\n}\n"
                } ]
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "template:read" ]
        } ],
        "summary" : "List templates",
        "tags" : [ "templates" ]
      },
      "post" : {
        "operationId" : "createTemplate",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TicketTemplateForm"
              }
            }
          },
          "description" : "New template",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TicketTemplateResponse"
                }
              },
              "test" : {
                "example" : {
                  "id" : "my-template",
                  "name" : "My Template",
                  "schema" : "{\n  \"definitions\": {},\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$id\": \"https://example.com/object1618746510.json\",\n  \"title\": \"Event\",\n  \"type\": \"object\",\n  \"required\": [\n    \"severity\",\n    \"description\",\n    \"tlp\"\n  ],\n  \"properties\": {\n    \"severity\": {\n      \"$id\": \"#root/severity\",\n      \"title\": \"Severity\",\n      \"type\": \"string\",\n      \"default\": \"Medium\",\n      \"nx-enum\": [\n        \"Low\",\n        \"Medium\",\n        \"High\"\n      ],\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"Low\",\n          \"title\": \"Low\",\n          \"icon\": \"mdi-chevron-up\"\n        },\n        {\n          \"const\": \"Medium\",\n          \"title\": \"Medium\",\n          \"icon\": \"mdi-chevron-double-up\"\n        },\n        {\n          \"const\": \"High\",\n          \"title\": \"High\",\n          \"icon\": \"mdi-chevron-triple-up\"\n        }\n      ]\n    },\n    \"tlp\": {\n      \"$id\": \"#root/tlp\",\n      \"title\": \"TLP\",\n      \"type\": \"string\",\n      \"nx-enum\": [\n        \"White\",\n        \"Green\",\n        \"Amber\",\n        \"Red\"\n      ],\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"White\",\n          \"title\": \"White\",\n          \"icon\": \"mdi-alpha-w\"\n        },\n        {\n          \"const\": \"Green\",\n          \"title\": \"Green\",\n          \"icon\": \"mdi-alpha-g\"\n        },\n        {\n          \"const\": \"Amber\",\n          \"title\": \"Amber\",\n          \"icon\": \"mdi-alpha-a\"\n        },\n        {\n          \"const\": \"Red\",\n          \"title\": \"Red\",\n          \"icon\": \"mdi-alpha-r\"\n        }\n      ]\n    },\n    \"description\": {\n      \"$id\": \"#root/description\",\n      \"title\": \"Description\",\n      \"type\": \"string\",\n      \"x-display\": \"textarea\",\n      \"x-class\": \"pr-2\"\n    }\n  }\n}\n"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "template:write" ]
        } ],
        "summary" : "Create a new template",
        "tags" : [ "templates" ],
        "x-codegen-request-body-name" : "template"
      }
    },
    "/templates/{id}" : {
      "delete" : {
        "operationId" : "deleteTemplate",
        "parameters" : [ {
          "description" : "Template ID",
          "example" : "default",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "content" : { },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "template:write" ]
        } ],
        "summary" : "Delete a template",
        "tags" : [ "templates" ]
      },
      "get" : {
        "operationId" : "getTemplate",
        "parameters" : [ {
          "description" : "Template ID",
          "example" : "default",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TicketTemplateResponse"
                }
              },
              "test" : {
                "example" : {
                  "id" : "default",
                  "name" : "Default",
                  "schema" : "{\n  \"definitions\": {},\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$id\": \"https://example.com/object1618746510.json\",\n  \"title\": \"Default\",\n  \"type\": \"object\",\n  \"required\": [\n    \"severity\",\n    \"description\",\n    \"tlp\"\n  ],\n  \"properties\": {\n    \"severity\": {\n      \"$id\": \"#root/severity\",\n      \"title\": \"Severity\",\n      \"type\": \"string\",\n      \"default\": \"Medium\",\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"Low\",\n          \"title\": \"Low\",\n          \"icon\": \"mdi-chevron-up\"\n        },\n        {\n          \"const\": \"Medium\",\n          \"title\": \"Medium\",\n          \"icon\": \"mdi-chevron-double-up\"\n        },\n        {\n          \"const\": \"High\",\n          \"title\": \"High\",\n          \"icon\": \"mdi-chevron-triple-up\"\n        }\n      ]\n    },\n    \"tlp\": {\n      \"$id\": \"#root/tlp\",\n      \"title\": \"TLP\",\n      \"type\": \"string\",\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"White\",\n          \"title\": \"White\",\n          \"icon\": \"mdi-alpha-w\"\n        },\n        {\n          \"const\": \"Green\",\n          \"title\": \"Green\",\n          \"icon\": \"mdi-alpha-g\"\n        },\n        {\n          \"const\": \"Amber\",\n          \"title\": \"Amber\",\n          \"icon\": \"mdi-alpha-a\"\n        },\n        {\n          \"const\": \"Red\",\n          \"title\": \"Red\",\n          \"icon\": \"mdi-alpha-r\"\n        }\n      ]\n    },\n    \"description\": {\n      \"$id\": \"#root/description\",\n      \"title\": \"Description\",\n      \"type\": \"string\",\n      \"x-display\": \"textarea\",\n      \"x-class\": \"pr-2\"\n    }\n  }\n}\n"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "template:read" ]
        } ],
        "summary" : "Get a single template",
        "tags" : [ "templates" ]
      },
      "put" : {
        "operationId" : "updateTemplate",
        "parameters" : [ {
          "description" : "Template ID",
          "example" : "default",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TicketTemplateForm"
              }
            }
          },
          "description" : "Template object that needs to be added",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TicketTemplateResponse"
                }
              },
              "test" : {
                "example" : {
                  "id" : "default",
                  "name" : "My Template",
                  "schema" : "{\n  \"definitions\": {},\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$id\": \"https://example.com/object1618746510.json\",\n  \"title\": \"Event\",\n  \"type\": \"object\",\n  \"required\": [\n    \"severity\",\n    \"description\",\n    \"tlp\"\n  ],\n  \"properties\": {\n    \"severity\": {\n      \"$id\": \"#root/severity\",\n      \"title\": \"Severity\",\n      \"type\": \"string\",\n      \"default\": \"Medium\",\n      \"nx-enum\": [\n        \"Low\",\n        \"Medium\",\n        \"High\"\n      ],\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"Low\",\n          \"title\": \"Low\",\n          \"icon\": \"mdi-chevron-up\"\n        },\n        {\n          \"const\": \"Medium\",\n          \"title\": \"Medium\",\n          \"icon\": \"mdi-chevron-double-up\"\n        },\n        {\n          \"const\": \"High\",\n          \"title\": \"High\",\n          \"icon\": \"mdi-chevron-triple-up\"\n        }\n      ]\n    },\n    \"tlp\": {\n      \"$id\": \"#root/tlp\",\n      \"title\": \"TLP\",\n      \"type\": \"string\",\n      \"nx-enum\": [\n        \"White\",\n        \"Green\",\n        \"Amber\",\n        \"Red\"\n      ],\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"White\",\n          \"title\": \"White\",\n          \"icon\": \"mdi-alpha-w\"\n        },\n        {\n          \"const\": \"Green\",\n          \"title\": \"Green\",\n          \"icon\": \"mdi-alpha-g\"\n        },\n        {\n          \"const\": \"Amber\",\n          \"title\": \"Amber\",\n          \"icon\": \"mdi-alpha-a\"\n        },\n        {\n          \"const\": \"Red\",\n          \"title\": \"Red\",\n          \"icon\": \"mdi-alpha-r\"\n        }\n      ]\n    },\n    \"description\": {\n      \"$id\": \"#root/description\",\n      \"title\": \"Description\",\n      \"type\": \"string\",\n      \"x-display\": \"textarea\",\n      \"x-class\": \"pr-2\"\n    }\n  }\n}\n"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "template:write" ]
        } ],
        "summary" : "Update an existing template",
        "tags" : [ "templates" ],
        "x-codegen-request-body-name" : "template"
      }
    },
    "/tickets" : {
      "get" : {
        "operationId" : "listTickets",
        "parameters" : [ {
          "description" : "Ticket Type",
          "in" : "query",
          "name" : "type",
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Offset of the list",
          "in" : "query",
          "name" : "offset",
          "schema" : {
            "default" : 0,
            "type" : "integer"
          }
        }, {
          "description" : "Number of tickets",
          "in" : "query",
          "name" : "count",
          "schema" : {
            "default" : 25,
            "maximum" : 100,
            "type" : "integer"
          }
        }, {
          "description" : "Sort columns",
          "explode" : false,
          "in" : "query",
          "name" : "sort",
          "schema" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Sort descending",
          "explode" : false,
          "in" : "query",
          "name" : "desc",
          "schema" : {
            "items" : {
              "type" : "boolean"
            },
            "type" : "array"
          },
          "style" : "form"
        }, {
          "description" : "Search query",
          "in" : "query",
          "name" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TicketList"
                }
              },
              "test" : {
                "example" : {
                  "count" : 3,
                  "tickets" : [ {
                    "artifacts" : [ {
                      "name" : "94d5cab6f5fe3422a447ab15436e7a672bc0c09a",
                      "status" : "unknown"
                    }, {
                      "name" : "http://www.customerviral.io/scalable/vertical/killer",
                      "status" : "clean"
                    }, {
                      "name" : "leadreintermediate.io",
                      "status" : "malicious"
                    } ],
                    "created" : "2021-10-02T16:04:59.078+0000",
                    "id" : 8123,
                    "modified" : "2021-10-02T16:04:59.078+0000",
                    "name" : "live zebra",
                    "owner" : "demo",
                    "playbooks" : {
                      "phishing" : {
                        "name" : "Phishing",
                        "tasks" : {
                          "block-iocs" : {
                            "created" : "2021-10-02T16:04:59.078+0000",
                            "done" : false,
                            "name" : "Block IOCs",
                            "type" : "task"
                          },
                          "block-sender" : {
                            "created" : "2021-10-02T16:04:59.078+0000",
                            "done" : false,
                            "name" : "Block sender",
                            "next" : {
                              "extract-iocs" : ""
                            },
                            "type" : "task"
                          },
                          "board" : {
                            "created" : "2021-10-02T16:04:59.078+0000",
                            "done" : false,
                            "name" : "Board Involvement?",
                            "next" : {
                              "escalate" : "boardInvolved == true",
                              "mail-available" : "boardInvolved == false"
                            },
                            "schema" : {
                              "properties" : {
                                "boardInvolved" : {
                                  "default" : false,
                                  "title" : "A board member is involved.",
                                  "type" : "boolean"
                                }
                              },
                              "required" : [ "boardInvolved" ],
                              "title" : "Board Involvement?",
                              "type" : "object"
                            },
                            "type" : "input"
                          },
                          "escalate" : {
                            "created" : "2021-10-02T16:04:59.078+0000",
                            "done" : false,
                            "name" : "Escalate to CISO",
                            "type" : "task"
                          },
                          "extract-iocs" : {
                            "created" : "2021-10-02T16:04:59.078+0000",
                            "done" : false,
                            "name" : "Extract IOCs",
                            "next" : {
                              "block-iocs" : ""
                            },
                            "schema" : {
                              "properties" : {
                                "iocs" : {
                                  "items" : {
                                    "type" : "string"
                                  },
                                  "title" : "IOCs",
                                  "type" : "array"
                                }
                              },
                              "title" : "Extract IOCs",
                              "type" : "object"
                            },
                            "type" : "input"
                          },
                          "mail-available" : {
                            "created" : "2021-10-02T16:04:59.078+0000",
                            "done" : false,
                            "name" : "Mail available",
                            "next" : {
                              "block-sender" : "schemaKey == 'yes'",
                              "extract-iocs" : "schemaKey == 'yes'",
                              "search-email-gateway" : "schemaKey == 'no'"
                            },
                            "schema" : {
                              "oneOf" : [ {
                                "properties" : {
                                  "mail" : {
                                    "title" : "Mail",
                                    "type" : "string",
                                    "x-display" : "textarea"
                                  },
                                  "schemaKey" : {
                                    "const" : "yes",
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "mail" ],
                                "title" : "Yes"
                              }, {
                                "properties" : {
                                  "schemaKey" : {
                                    "const" : "no",
                                    "type" : "string"
                                  }
                                },
                                "title" : "No"
                              } ],
                              "title" : "Mail available",
                              "type" : "object"
                            },
                            "type" : "input"
                          },
                          "search-email-gateway" : {
                            "created" : "2021-10-02T16:04:59.078+0000",
                            "done" : false,
                            "name" : "Search email gateway",
                            "next" : {
                              "extract-iocs" : ""
                            },
                            "type" : "task"
                          }
                        }
                      }
                    },
                    "references" : [ {
                      "href" : "https://www.leadmaximize.net/e-services/back-end",
                      "name" : "performance"
                    }, {
                      "href" : "http://www.corporateinteractive.name/rich",
                      "name" : "autumn"
                    }, {
                      "href" : "https://www.corporateintuitive.org/intuitive/platforms/integrate",
                      "name" : "suggest"
                    } ],
                    "schema" : "{\n  \"definitions\": {},\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$id\": \"https://example.com/object1618746510.json\",\n  \"title\": \"Event\",\n  \"type\": \"object\",\n  \"required\": [\n    \"severity\",\n    \"description\",\n    \"tlp\"\n  ],\n  \"properties\": {\n    \"severity\": {\n      \"$id\": \"#root/severity\",\n      \"title\": \"Severity\",\n      \"type\": \"string\",\n      \"default\": \"Medium\",\n      \"nx-enum\": [\n        \"Low\",\n        \"Medium\",\n        \"High\"\n      ],\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"Low\",\n          \"title\": \"Low\",\n          \"icon\": \"mdi-chevron-up\"\n        },\n        {\n          \"const\": \"Medium\",\n          \"title\": \"Medium\",\n          \"icon\": \"mdi-chevron-double-up\"\n        },\n        {\n          \"const\": \"High\",\n          \"title\": \"High\",\n          \"icon\": \"mdi-chevron-triple-up\"\n        }\n      ]\n    },\n    \"tlp\": {\n      \"$id\": \"#root/tlp\",\n      \"title\": \"TLP\",\n      \"type\": \"string\",\n      \"nx-enum\": [\n        \"White\",\n        \"Green\",\n        \"Amber\",\n        \"Red\"\n      ],\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"White\",\n          \"title\": \"White\",\n          \"icon\": \"mdi-alpha-w\"\n        },\n        {\n          \"const\": \"Green\",\n          \"title\": \"Green\",\n          \"icon\": \"mdi-alpha-g\"\n        },\n        {\n          \"const\": \"Amber\",\n          \"title\": \"Amber\",\n          \"icon\": \"mdi-alpha-a\"\n        },\n        {\n          \"const\": \"Red\",\n          \"title\": \"Red\",\n          \"icon\": \"mdi-alpha-r\"\n        }\n      ]\n    },\n    \"description\": {\n      \"$id\": \"#root/description\",\n      \"title\": \"Description\",\n      \"type\": \"string\",\n      \"x-display\": \"textarea\",\n      \"x-class\": \"pr-2\"\n    }\n  }\n}\n",
                    "status" : "closed",
                    "type" : "incident"
                  }, {
                    "created" : "2021-10-02T16:04:59.078+0000",
                    "id" : 8125,
                    "modified" : "2021-10-02T16:04:59.078+0000",
                    "name" : "phishing from selenafadel@von.com detected",
                    "owner" : "demo",
                    "references" : [ {
                      "href" : "https://www.seniorleading-edge.name/users/efficient",
                      "name" : "recovery"
                    }, {
                      "href" : "http://www.dynamicseamless.com/clicks-and-mortar",
                      "name" : "force"
                    }, {
                      "href" : "http://www.leadscalable.biz/envisioneer",
                      "name" : "fund"
                    } ],
                    "schema" : "{}",
                    "status" : "closed",
                    "type" : "alert"
                  }, {
                    "created" : "2021-10-02T16:04:59.078+0000",
                    "id" : 8126,
                    "modified" : "2021-10-02T16:04:59.078+0000",
                    "name" : "Surfaceintroduce virus detected",
                    "owner" : "demo",
                    "references" : [ {
                      "href" : "http://www.centralworld-class.io/synthesize",
                      "name" : "university"
                    }, {
                      "href" : "https://www.futurevirtual.org/supply-chains/markets/sticky/iterate",
                      "name" : "goal"
                    }, {
                      "href" : "http://www.chiefsyndicate.io/action-items",
                      "name" : "unemployment"
                    } ],
                    "schema" : "{}",
                    "status" : "closed",
                    "type" : "alert"
                  } ]
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "ticket:read" ]
        } ],
        "summary" : "List tickets",
        "tags" : [ "tickets" ]
      },
      "post" : {
        "operationId" : "createTicket",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TicketForm"
              }
            }
          },
          "description" : "New ticket",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TicketResponse"
                }
              },
              "test" : {
                "example" : {
                  "created" : "1985-04-12T23:20:50.520+0000",
                  "id" : 123,
                  "modified" : "1985-04-12T23:20:50.520+0000",
                  "name" : "Wannacry infection",
                  "owner" : "bob",
                  "schema" : "{}",
                  "status" : "open",
                  "type" : "incident"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "ticket:write" ]
        } ],
        "summary" : "Create a new ticket",
        "tags" : [ "tickets" ],
        "x-codegen-request-body-name" : "ticket"
      }
    },
    "/tickets/{id}" : {
      "delete" : {
        "operationId" : "deleteTicket",
        "parameters" : [ {
          "description" : "Ticket ID",
          "example" : 8125,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "204" : {
            "content" : { },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "ticket:delete" ]
        } ],
        "summary" : "Delete an ticket",
        "tags" : [ "tickets" ]
      },
      "get" : {
        "operationId" : "getTicket",
        "parameters" : [ {
          "description" : "Ticket ID",
          "example" : 8125,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TicketResponse"
                }
              },
              "test" : {
                "example" : {
                  "created" : "2021-10-02T16:04:59.078+0000",
                  "id" : 8125,
                  "modified" : "2021-10-02T16:04:59.078+0000",
                  "name" : "phishing from selenafadel@von.com detected",
                  "owner" : "demo",
                  "references" : [ {
                    "href" : "https://www.seniorleading-edge.name/users/efficient",
                    "name" : "recovery"
                  }, {
                    "href" : "http://www.dynamicseamless.com/clicks-and-mortar",
                    "name" : "force"
                  }, {
                    "href" : "http://www.leadscalable.biz/envisioneer",
                    "name" : "fund"
                  } ],
                  "schema" : "{}",
                  "status" : "closed",
                  "tickets" : [ {
                    "created" : "2021-10-02T16:04:59.078+0000",
                    "id" : 8126,
                    "modified" : "2021-10-02T16:04:59.078+0000",
                    "name" : "Surfaceintroduce virus detected",
                    "owner" : "demo",
                    "references" : [ {
                      "href" : "http://www.centralworld-class.io/synthesize",
                      "name" : "university"
                    }, {
                      "href" : "https://www.futurevirtual.org/supply-chains/markets/sticky/iterate",
                      "name" : "goal"
                    }, {
                      "href" : "http://www.chiefsyndicate.io/action-items",
                      "name" : "unemployment"
                    } ],
                    "schema" : "{}",
                    "status" : "closed",
                    "type" : "alert"
                  } ],
                  "type" : "alert"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "ticket:read" ]
        } ],
        "summary" : "Get a single ticket",
        "tags" : [ "tickets" ]
      },
      "put" : {
        "operationId" : "updateTicket",
        "parameters" : [ {
          "description" : "Ticket ID",
          "example" : 8125,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Ticket"
              }
            }
          },
          "description" : "Updated ticket",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TicketResponse"
                }
              },
              "test" : {
                "example" : {
                  "created" : "2021-10-02T16:04:59.078+0000",
                  "id" : 8125,
                  "modified" : "2021-10-02T16:04:59.078+0000",
                  "name" : "phishing from selenafadel@von.org detected",
                  "owner" : "demo",
                  "references" : [ {
                    "href" : "https://www.seniorleading-edge.name/users/efficient",
                    "name" : "recovery"
                  }, {
                    "href" : "http://www.dynamicseamless.com/clicks-and-mortar",
                    "name" : "force"
                  }, {
                    "href" : "http://www.leadscalable.biz/envisioneer",
                    "name" : "fund"
                  } ],
                  "schema" : "{}",
                  "status" : "closed",
                  "tickets" : [ {
                    "created" : "2021-10-02T16:04:59.078+0000",
                    "id" : 8126,
                    "modified" : "2021-10-02T16:04:59.078+0000",
                    "name" : "Surfaceintroduce virus detected",
                    "owner" : "demo",
                    "references" : [ {
                      "href" : "http://www.centralworld-class.io/synthesize",
                      "name" : "university"
                    }, {
                      "href" : "https://www.futurevirtual.org/supply-chains/markets/sticky/iterate",
                      "name" : "goal"
                    }, {
                      "href" : "http://www.chiefsyndicate.io/action-items",
                      "name" : "unemployment"
                    } ],
                    "schema" : "{}",
                    "status" : "closed",
                    "type" : "alert"
                  } ],
                  "type" : "alert"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "ticket:write" ]
        } ],
        "summary" : "Update an existing ticket",
        "tags" : [ "tickets" ],
        "x-codegen-request-body-name" : "ticket"
      }
    },
    "/tickets/{id}/artifacts" : {
      "post" : {
        "operationId" : "addArtifact",
        "parameters" : [ {
          "description" : "Ticket ID",
          "example" : 8123,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Artifact"
              }
            }
          },
          "description" : "Artifact object that needs to be added",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TicketResponse"
                }
              },
              "test" : {
                "example" : {
                  "artifacts" : [ {
                    "name" : "94d5cab6f5fe3422a447ab15436e7a672bc0c09a",
                    "status" : "unknown"
                  }, {
                    "name" : "http://www.customerviral.io/scalable/vertical/killer",
                    "status" : "clean"
                  }, {
                    "name" : "leadreintermediate.io",
                    "status" : "malicious"
                  }, {
                    "name" : "2.2.2.2",
                    "status" : "unknown",
                    "type" : "ip"
                  } ],
                  "created" : "2021-10-02T16:04:59.078+0000",
                  "id" : 8123,
                  "modified" : "2021-10-02T16:04:59.078+0000",
                  "name" : "live zebra",
                  "owner" : "demo",
                  "playbooks" : {
                    "phishing" : {
                      "name" : "Phishing",
                      "tasks" : {
                        "block-iocs" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Block IOCs",
                          "order" : 6,
                          "type" : "task"
                        },
                        "block-sender" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Block sender",
                          "next" : {
                            "extract-iocs" : ""
                          },
                          "order" : 3,
                          "type" : "task"
                        },
                        "board" : {
                          "active" : true,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Board Involvement?",
                          "next" : {
                            "escalate" : "boardInvolved == true",
                            "mail-available" : "boardInvolved == false"
                          },
                          "order" : 0,
                          "schema" : {
                            "properties" : {
                              "boardInvolved" : {
                                "default" : false,
                                "title" : "A board member is involved.",
                                "type" : "boolean"
                              }
                            },
                            "required" : [ "boardInvolved" ],
                            "title" : "Board Involvement?",
                            "type" : "object"
                          },
                          "type" : "input"
                        },
                        "escalate" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Escalate to CISO",
                          "order" : 1,
                          "type" : "task"
                        },
                        "extract-iocs" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Extract IOCs",
                          "next" : {
                            "block-iocs" : ""
                          },
                          "order" : 5,
                          "schema" : {
                            "properties" : {
                              "iocs" : {
                                "items" : {
                                  "type" : "string"
                                },
                                "title" : "IOCs",
                                "type" : "array"
                              }
                            },
                            "title" : "Extract IOCs",
                            "type" : "object"
                          },
                          "type" : "input"
                        },
                        "mail-available" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Mail available",
                          "next" : {
                            "block-sender" : "schemaKey == 'yes'",
                            "extract-iocs" : "schemaKey == 'yes'",
                            "search-email-gateway" : "schemaKey == 'no'"
                          },
                          "order" : 2,
                          "schema" : {
                            "oneOf" : [ {
                              "properties" : {
                                "mail" : {
                                  "title" : "Mail",
                                  "type" : "string",
                                  "x-display" : "textarea"
                                },
                                "schemaKey" : {
                                  "const" : "yes",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "mail" ],
                              "title" : "Yes"
                            }, {
                              "properties" : {
                                "schemaKey" : {
                                  "const" : "no",
                                  "type" : "string"
                                }
                              },
                              "title" : "No"
                            } ],
                            "title" : "Mail available",
                            "type" : "object"
                          },
                          "type" : "input"
                        },
                        "search-email-gateway" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Search email gateway",
                          "next" : {
                            "extract-iocs" : ""
                          },
                          "order" : 4,
                          "type" : "task"
                        }
                      }
                    }
                  },
                  "references" : [ {
                    "href" : "https://www.leadmaximize.net/e-services/back-end",
                    "name" : "performance"
                  }, {
                    "href" : "http://www.corporateinteractive.name/rich",
                    "name" : "autumn"
                  }, {
                    "href" : "https://www.corporateintuitive.org/intuitive/platforms/integrate",
                    "name" : "suggest"
                  } ],
                  "schema" : "{\n  \"definitions\": {},\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$id\": \"https://example.com/object1618746510.json\",\n  \"title\": \"Event\",\n  \"type\": \"object\",\n  \"required\": [\n    \"severity\",\n    \"description\",\n    \"tlp\"\n  ],\n  \"properties\": {\n    \"severity\": {\n      \"$id\": \"#root/severity\",\n      \"title\": \"Severity\",\n      \"type\": \"string\",\n      \"default\": \"Medium\",\n      \"nx-enum\": [\n        \"Low\",\n        \"Medium\",\n        \"High\"\n      ],\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"Low\",\n          \"title\": \"Low\",\n          \"icon\": \"mdi-chevron-up\"\n        },\n        {\n          \"const\": \"Medium\",\n          \"title\": \"Medium\",\n          \"icon\": \"mdi-chevron-double-up\"\n        },\n        {\n          \"const\": \"High\",\n          \"title\": \"High\",\n          \"icon\": \"mdi-chevron-triple-up\"\n        }\n      ]\n    },\n    \"tlp\": {\n      \"$id\": \"#root/tlp\",\n      \"title\": \"TLP\",\n      \"type\": \"string\",\n      \"nx-enum\": [\n        \"White\",\n        \"Green\",\n        \"Amber\",\n        \"Red\"\n      ],\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"White\",\n          \"title\": \"White\",\n          \"icon\": \"mdi-alpha-w\"\n        },\n        {\n          \"const\": \"Green\",\n          \"title\": \"Green\",\n          \"icon\": \"mdi-alpha-g\"\n        },\n        {\n          \"const\": \"Amber\",\n          \"title\": \"Amber\",\n          \"icon\": \"mdi-alpha-a\"\n        },\n        {\n          \"const\": \"Red\",\n          \"title\": \"Red\",\n          \"icon\": \"mdi-alpha-r\"\n        }\n      ]\n    },\n    \"description\": {\n      \"$id\": \"#root/description\",\n      \"title\": \"Description\",\n      \"type\": \"string\",\n      \"x-display\": \"textarea\",\n      \"x-class\": \"pr-2\"\n    }\n  }\n}\n",
                  "status" : "closed",
                  "type" : "incident"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "ticket:write" ]
        } ],
        "summary" : "Add a single artifact",
        "tags" : [ "tickets" ],
        "x-codegen-request-body-name" : "artifact"
      }
    },
    "/tickets/{id}/artifacts/{name}" : {
      "delete" : {
        "operationId" : "removeArtifact",
        "parameters" : [ {
          "description" : "Ticket ID",
          "example" : 8123,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "example" : "leadreintermediate.io",
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TicketResponse"
                }
              },
              "test" : {
                "example" : {
                  "artifacts" : [ {
                    "name" : "94d5cab6f5fe3422a447ab15436e7a672bc0c09a",
                    "status" : "unknown"
                  }, {
                    "name" : "http://www.customerviral.io/scalable/vertical/killer",
                    "status" : "clean"
                  } ],
                  "created" : "2021-10-02T16:04:59.078+0000",
                  "id" : 8123,
                  "modified" : "2021-10-02T16:04:59.078+0000",
                  "name" : "live zebra",
                  "owner" : "demo",
                  "playbooks" : {
                    "phishing" : {
                      "name" : "Phishing",
                      "tasks" : {
                        "block-iocs" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Block IOCs",
                          "order" : 6,
                          "type" : "task"
                        },
                        "block-sender" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Block sender",
                          "next" : {
                            "extract-iocs" : ""
                          },
                          "order" : 3,
                          "type" : "task"
                        },
                        "board" : {
                          "active" : true,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Board Involvement?",
                          "next" : {
                            "escalate" : "boardInvolved == true",
                            "mail-available" : "boardInvolved == false"
                          },
                          "order" : 0,
                          "schema" : {
                            "properties" : {
                              "boardInvolved" : {
                                "default" : false,
                                "title" : "A board member is involved.",
                                "type" : "boolean"
                              }
                            },
                            "required" : [ "boardInvolved" ],
                            "title" : "Board Involvement?",
                            "type" : "object"
                          },
                          "type" : "input"
                        },
                        "escalate" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Escalate to CISO",
                          "order" : 1,
                          "type" : "task"
                        },
                        "extract-iocs" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Extract IOCs",
                          "next" : {
                            "block-iocs" : ""
                          },
                          "order" : 5,
                          "schema" : {
                            "properties" : {
                              "iocs" : {
                                "items" : {
                                  "type" : "string"
                                },
                                "title" : "IOCs",
                                "type" : "array"
                              }
                            },
                            "title" : "Extract IOCs",
                            "type" : "object"
                          },
                          "type" : "input"
                        },
                        "mail-available" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Mail available",
                          "next" : {
                            "block-sender" : "schemaKey == 'yes'",
                            "extract-iocs" : "schemaKey == 'yes'",
                            "search-email-gateway" : "schemaKey == 'no'"
                          },
                          "order" : 2,
                          "schema" : {
                            "oneOf" : [ {
                              "properties" : {
                                "mail" : {
                                  "title" : "Mail",
                                  "type" : "string",
                                  "x-display" : "textarea"
                                },
                                "schemaKey" : {
                                  "const" : "yes",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "mail" ],
                              "title" : "Yes"
                            }, {
                              "properties" : {
                                "schemaKey" : {
                                  "const" : "no",
                                  "type" : "string"
                                }
                              },
                              "title" : "No"
                            } ],
                            "title" : "Mail available",
                            "type" : "object"
                          },
                          "type" : "input"
                        },
                        "search-email-gateway" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Search email gateway",
                          "next" : {
                            "extract-iocs" : ""
                          },
                          "order" : 4,
                          "type" : "task"
                        }
                      }
                    }
                  },
                  "references" : [ {
                    "href" : "https://www.leadmaximize.net/e-services/back-end",
                    "name" : "performance"
                  }, {
                    "href" : "http://www.corporateinteractive.name/rich",
                    "name" : "autumn"
                  }, {
                    "href" : "https://www.corporateintuitive.org/intuitive/platforms/integrate",
                    "name" : "suggest"
                  } ],
                  "schema" : "{\n  \"definitions\": {},\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$id\": \"https://example.com/object1618746510.json\",\n  \"title\": \"Event\",\n  \"type\": \"object\",\n  \"required\": [\n    \"severity\",\n    \"description\",\n    \"tlp\"\n  ],\n  \"properties\": {\n    \"severity\": {\n      \"$id\": \"#root/severity\",\n      \"title\": \"Severity\",\n      \"type\": \"string\",\n      \"default\": \"Medium\",\n      \"nx-enum\": [\n        \"Low\",\n        \"Medium\",\n        \"High\"\n      ],\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"Low\",\n          \"title\": \"Low\",\n          \"icon\": \"mdi-chevron-up\"\n        },\n        {\n          \"const\": \"Medium\",\n          \"title\": \"Medium\",\n          \"icon\": \"mdi-chevron-double-up\"\n        },\n        {\n          \"const\": \"High\",\n          \"title\": \"High\",\n          \"icon\": \"mdi-chevron-triple-up\"\n        }\n      ]\n    },\n    \"tlp\": {\n      \"$id\": \"#root/tlp\",\n      \"title\": \"TLP\",\n      \"type\": \"string\",\n      \"nx-enum\": [\n        \"White\",\n        \"Green\",\n        \"Amber\",\n        \"Red\"\n      ],\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"White\",\n          \"title\": \"White\",\n          \"icon\": \"mdi-alpha-w\"\n        },\n        {\n          \"const\": \"Green\",\n          \"title\": \"Green\",\n          \"icon\": \"mdi-alpha-g\"\n        },\n        {\n          \"const\": \"Amber\",\n          \"title\": \"Amber\",\n          \"icon\": \"mdi-alpha-a\"\n        },\n        {\n          \"const\": \"Red\",\n          \"title\": \"Red\",\n          \"icon\": \"mdi-alpha-r\"\n        }\n      ]\n    },\n    \"description\": {\n      \"$id\": \"#root/description\",\n      \"title\": \"Description\",\n      \"type\": \"string\",\n      \"x-display\": \"textarea\",\n      \"x-class\": \"pr-2\"\n    }\n  }\n}\n",
                  "status" : "closed",
                  "type" : "incident"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "ticket:write" ]
        } ],
        "summary" : "Remove an artifact",
        "tags" : [ "tickets" ]
      },
      "get" : {
        "operationId" : "getArtifact",
        "parameters" : [ {
          "description" : "Ticket ID",
          "example" : 8123,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "example" : "leadreintermediate.io",
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artifact"
                }
              },
              "test" : {
                "example" : {
                  "name" : "leadreintermediate.io",
                  "status" : "malicious"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "ticket:write" ]
        } ],
        "summary" : "Get a single artifact",
        "tags" : [ "tickets" ]
      },
      "put" : {
        "operationId" : "setArtifact",
        "parameters" : [ {
          "description" : "Ticket ID",
          "example" : 8123,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "example" : "leadreintermediate.io",
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Artifact"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TicketResponse"
                }
              },
              "test" : {
                "example" : {
                  "artifacts" : [ {
                    "name" : "94d5cab6f5fe3422a447ab15436e7a672bc0c09a",
                    "status" : "unknown"
                  }, {
                    "name" : "http://www.customerviral.io/scalable/vertical/killer",
                    "status" : "clean"
                  }, {
                    "name" : "leadreintermediate.io",
                    "status" : "clean"
                  } ],
                  "created" : "2021-10-02T16:04:59.078+0000",
                  "id" : 8123,
                  "modified" : "2021-10-02T16:04:59.078+0000",
                  "name" : "live zebra",
                  "owner" : "demo",
                  "playbooks" : {
                    "phishing" : {
                      "name" : "Phishing",
                      "tasks" : {
                        "block-iocs" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Block IOCs",
                          "order" : 6,
                          "type" : "task"
                        },
                        "block-sender" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Block sender",
                          "next" : {
                            "extract-iocs" : ""
                          },
                          "order" : 3,
                          "type" : "task"
                        },
                        "board" : {
                          "active" : true,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Board Involvement?",
                          "next" : {
                            "escalate" : "boardInvolved == true",
                            "mail-available" : "boardInvolved == false"
                          },
                          "order" : 0,
                          "schema" : {
                            "properties" : {
                              "boardInvolved" : {
                                "default" : false,
                                "title" : "A board member is involved.",
                                "type" : "boolean"
                              }
                            },
                            "required" : [ "boardInvolved" ],
                            "title" : "Board Involvement?",
                            "type" : "object"
                          },
                          "type" : "input"
                        },
                        "escalate" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Escalate to CISO",
                          "order" : 1,
                          "type" : "task"
                        },
                        "extract-iocs" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Extract IOCs",
                          "next" : {
                            "block-iocs" : ""
                          },
                          "order" : 5,
                          "schema" : {
                            "properties" : {
                              "iocs" : {
                                "items" : {
                                  "type" : "string"
                                },
                                "title" : "IOCs",
                                "type" : "array"
                              }
                            },
                            "title" : "Extract IOCs",
                            "type" : "object"
                          },
                          "type" : "input"
                        },
                        "mail-available" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Mail available",
                          "next" : {
                            "block-sender" : "schemaKey == 'yes'",
                            "extract-iocs" : "schemaKey == 'yes'",
                            "search-email-gateway" : "schemaKey == 'no'"
                          },
                          "order" : 2,
                          "schema" : {
                            "oneOf" : [ {
                              "properties" : {
                                "mail" : {
                                  "title" : "Mail",
                                  "type" : "string",
                                  "x-display" : "textarea"
                                },
                                "schemaKey" : {
                                  "const" : "yes",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "mail" ],
                              "title" : "Yes"
                            }, {
                              "properties" : {
                                "schemaKey" : {
                                  "const" : "no",
                                  "type" : "string"
                                }
                              },
                              "title" : "No"
                            } ],
                            "title" : "Mail available",
                            "type" : "object"
                          },
                          "type" : "input"
                        },
                        "search-email-gateway" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Search email gateway",
                          "next" : {
                            "extract-iocs" : ""
                          },
                          "order" : 4,
                          "type" : "task"
                        }
                      }
                    }
                  },
                  "references" : [ {
                    "href" : "https://www.leadmaximize.net/e-services/back-end",
                    "name" : "performance"
                  }, {
                    "href" : "http://www.corporateinteractive.name/rich",
                    "name" : "autumn"
                  }, {
                    "href" : "https://www.corporateintuitive.org/intuitive/platforms/integrate",
                    "name" : "suggest"
                  } ],
                  "schema" : "{\n  \"definitions\": {},\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$id\": \"https://example.com/object1618746510.json\",\n  \"title\": \"Event\",\n  \"type\": \"object\",\n  \"required\": [\n    \"severity\",\n    \"description\",\n    \"tlp\"\n  ],\n  \"properties\": {\n    \"severity\": {\n      \"$id\": \"#root/severity\",\n      \"title\": \"Severity\",\n      \"type\": \"string\",\n      \"default\": \"Medium\",\n      \"nx-enum\": [\n        \"Low\",\n        \"Medium\",\n        \"High\"\n      ],\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"Low\",\n          \"title\": \"Low\",\n          \"icon\": \"mdi-chevron-up\"\n        },\n        {\n          \"const\": \"Medium\",\n          \"title\": \"Medium\",\n          \"icon\": \"mdi-chevron-double-up\"\n        },\n        {\n          \"const\": \"High\",\n          \"title\": \"High\",\n          \"icon\": \"mdi-chevron-triple-up\"\n        }\n      ]\n    },\n    \"tlp\": {\n      \"$id\": \"#root/tlp\",\n      \"title\": \"TLP\",\n      \"type\": \"string\",\n      \"nx-enum\": [\n        \"White\",\n        \"Green\",\n        \"Amber\",\n        \"Red\"\n      ],\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"White\",\n          \"title\": \"White\",\n          \"icon\": \"mdi-alpha-w\"\n        },\n        {\n          \"const\": \"Green\",\n          \"title\": \"Green\",\n          \"icon\": \"mdi-alpha-g\"\n        },\n        {\n          \"const\": \"Amber\",\n          \"title\": \"Amber\",\n          \"icon\": \"mdi-alpha-a\"\n        },\n        {\n          \"const\": \"Red\",\n          \"title\": \"Red\",\n          \"icon\": \"mdi-alpha-r\"\n        }\n      ]\n    },\n    \"description\": {\n      \"$id\": \"#root/description\",\n      \"title\": \"Description\",\n      \"type\": \"string\",\n      \"x-display\": \"textarea\",\n      \"x-class\": \"pr-2\"\n    }\n  }\n}\n",
                  "status" : "closed",
                  "type" : "incident"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "ticket:write" ]
        } ],
        "summary" : "Set a single artifact",
        "tags" : [ "tickets" ],
        "x-codegen-request-body-name" : "artifact"
      }
    },
    "/tickets/{id}/artifacts/{name}/enrich" : {
      "post" : {
        "operationId" : "enrichArtifact",
        "parameters" : [ {
          "description" : "Ticket ID",
          "example" : 8123,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "example" : "leadreintermediate.io",
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnrichmentForm"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Artifact"
                }
              },
              "test" : {
                "example" : {
                  "artifacts" : [ {
                    "name" : "94d5cab6f5fe3422a447ab15436e7a672bc0c09a",
                    "status" : "unknown"
                  }, {
                    "name" : "http://www.customerviral.io/scalable/vertical/killer",
                    "status" : "clean"
                  }, {
                    "enrichments" : {
                      "hash.sha1" : {
                        "created" : "2021-10-03T16:44:06.489+0000",
                        "data" : {
                          "hash" : "b7a067a742c20d07a7456646de89bc2d408a1153"
                        },
                        "name" : "hash.sha1"
                      }
                    },
                    "name" : "leadreintermediate.io",
                    "status" : "malicious"
                  } ],
                  "created" : "2021-10-02T16:04:59.078+0000",
                  "id" : 8123,
                  "modified" : "2021-10-02T16:04:59.078+0000",
                  "name" : "live zebra",
                  "owner" : "demo",
                  "playbooks" : {
                    "phishing" : {
                      "name" : "Phishing",
                      "tasks" : {
                        "block-iocs" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Block IOCs",
                          "order" : 6,
                          "type" : "task"
                        },
                        "block-sender" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Block sender",
                          "next" : {
                            "extract-iocs" : ""
                          },
                          "order" : 3,
                          "type" : "task"
                        },
                        "board" : {
                          "active" : true,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Board Involvement?",
                          "next" : {
                            "escalate" : "boardInvolved == true",
                            "mail-available" : "boardInvolved == false"
                          },
                          "order" : 0,
                          "schema" : {
                            "properties" : {
                              "boardInvolved" : {
                                "default" : false,
                                "title" : "A board member is involved.",
                                "type" : "boolean"
                              }
                            },
                            "required" : [ "boardInvolved" ],
                            "title" : "Board Involvement?",
                            "type" : "object"
                          },
                          "type" : "input"
                        },
                        "escalate" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Escalate to CISO",
                          "order" : 1,
                          "type" : "task"
                        },
                        "extract-iocs" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Extract IOCs",
                          "next" : {
                            "block-iocs" : ""
                          },
                          "order" : 5,
                          "schema" : {
                            "properties" : {
                              "iocs" : {
                                "items" : {
                                  "type" : "string"
                                },
                                "title" : "IOCs",
                                "type" : "array"
                              }
                            },
                            "title" : "Extract IOCs",
                            "type" : "object"
                          },
                          "type" : "input"
                        },
                        "mail-available" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Mail available",
                          "next" : {
                            "block-sender" : "schemaKey == 'yes'",
                            "extract-iocs" : "schemaKey == 'yes'",
                            "search-email-gateway" : "schemaKey == 'no'"
                          },
                          "order" : 2,
                          "schema" : {
                            "oneOf" : [ {
                              "properties" : {
                                "mail" : {
                                  "title" : "Mail",
                                  "type" : "string",
                                  "x-display" : "textarea"
                                },
                                "schemaKey" : {
                                  "const" : "yes",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "mail" ],
                              "title" : "Yes"
                            }, {
                              "properties" : {
                                "schemaKey" : {
                                  "const" : "no",
                                  "type" : "string"
                                }
                              },
                              "title" : "No"
                            } ],
                            "title" : "Mail available",
                            "type" : "object"
                          },
                          "type" : "input"
                        },
                        "search-email-gateway" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Search email gateway",
                          "next" : {
                            "extract-iocs" : ""
                          },
                          "order" : 4,
                          "type" : "task"
                        }
                      }
                    }
                  },
                  "references" : [ {
                    "href" : "https://www.leadmaximize.net/e-services/back-end",
                    "name" : "performance"
                  }, {
                    "href" : "http://www.corporateinteractive.name/rich",
                    "name" : "autumn"
                  }, {
                    "href" : "https://www.corporateintuitive.org/intuitive/platforms/integrate",
                    "name" : "suggest"
                  } ],
                  "schema" : "{\n  \"definitions\": {},\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$id\": \"https://example.com/object1618746510.json\",\n  \"title\": \"Event\",\n  \"type\": \"object\",\n  \"required\": [\n    \"severity\",\n    \"description\",\n    \"tlp\"\n  ],\n  \"properties\": {\n    \"severity\": {\n      \"$id\": \"#root/severity\",\n      \"title\": \"Severity\",\n      \"type\": \"string\",\n      \"default\": \"Medium\",\n      \"nx-enum\": [\n        \"Low\",\n        \"Medium\",\n        \"High\"\n      ],\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"Low\",\n          \"title\": \"Low\",\n          \"icon\": \"mdi-chevron-up\"\n        },\n        {\n          \"const\": \"Medium\",\n          \"title\": \"Medium\",\n          \"icon\": \"mdi-chevron-double-up\"\n        },\n        {\n          \"const\": \"High\",\n          \"title\": \"High\",\n          \"icon\": \"mdi-chevron-triple-up\"\n        }\n      ]\n    },\n    \"tlp\": {\n      \"$id\": \"#root/tlp\",\n      \"title\": \"TLP\",\n      \"type\": \"string\",\n      \"nx-enum\": [\n        \"White\",\n        \"Green\",\n        \"Amber\",\n        \"Red\"\n      ],\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"White\",\n          \"title\": \"White\",\n          \"icon\": \"mdi-alpha-w\"\n        },\n        {\n          \"const\": \"Green\",\n          \"title\": \"Green\",\n          \"icon\": \"mdi-alpha-g\"\n        },\n        {\n          \"const\": \"Amber\",\n          \"title\": \"Amber\",\n          \"icon\": \"mdi-alpha-a\"\n        },\n        {\n          \"const\": \"Red\",\n          \"title\": \"Red\",\n          \"icon\": \"mdi-alpha-r\"\n        }\n      ]\n    },\n    \"description\": {\n      \"$id\": \"#root/description\",\n      \"title\": \"Description\",\n      \"type\": \"string\",\n      \"x-display\": \"textarea\",\n      \"x-class\": \"pr-2\"\n    }\n  }\n}\n",
                  "status" : "closed",
                  "type" : "incident"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "ticket:write" ]
        } ],
        "summary" : "Enrich a single artifact",
        "tags" : [ "tickets" ],
        "x-codegen-request-body-name" : "data"
      }
    },
    "/tickets/{id}/artifacts/{name}/run/{automation}" : {
      "post" : {
        "operationId" : "runArtifact",
        "parameters" : [ {
          "description" : "Ticket ID",
          "example" : 8123,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "example" : "leadreintermediate.io",
          "in" : "path",
          "name" : "name",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "example" : "hash.sha1",
          "in" : "path",
          "name" : "automation",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "content" : { },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "ticket:write" ]
        } ],
        "summary" : "Run automation on a single artifact",
        "tags" : [ "tickets" ]
      }
    },
    "/tickets/{id}/comments" : {
      "post" : {
        "operationId" : "addComment",
        "parameters" : [ {
          "description" : "Ticket ID",
          "example" : 8125,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CommentForm"
              }
            }
          },
          "description" : "Ticket comment",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TicketResponse"
                }
              },
              "test" : {
                "example" : {
                  "comments" : [ {
                    "created" : "2021-10-02T16:04:59.078+0000",
                    "creator" : "bob",
                    "message" : "My first comment"
                  } ],
                  "created" : "2021-10-02T16:04:59.078+0000",
                  "id" : 8125,
                  "modified" : "2021-10-02T16:04:59.078+0000",
                  "name" : "phishing from selenafadel@von.com detected",
                  "owner" : "demo",
                  "references" : [ {
                    "href" : "https://www.seniorleading-edge.name/users/efficient",
                    "name" : "recovery"
                  }, {
                    "href" : "http://www.dynamicseamless.com/clicks-and-mortar",
                    "name" : "force"
                  }, {
                    "href" : "http://www.leadscalable.biz/envisioneer",
                    "name" : "fund"
                  } ],
                  "schema" : "{}",
                  "status" : "closed",
                  "tickets" : [ {
                    "created" : "2021-10-02T16:04:59.078+0000",
                    "id" : 8126,
                    "modified" : "2021-10-02T16:04:59.078+0000",
                    "name" : "Surfaceintroduce virus detected",
                    "owner" : "demo",
                    "references" : [ {
                      "href" : "http://www.centralworld-class.io/synthesize",
                      "name" : "university"
                    }, {
                      "href" : "https://www.futurevirtual.org/supply-chains/markets/sticky/iterate",
                      "name" : "goal"
                    }, {
                      "href" : "http://www.chiefsyndicate.io/action-items",
                      "name" : "unemployment"
                    } ],
                    "schema" : "{}",
                    "status" : "closed",
                    "type" : "alert"
                  } ],
                  "type" : "alert"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "ticket:write" ]
        } ],
        "summary" : "Add ticket comment",
        "tags" : [ "tickets" ],
        "x-codegen-request-body-name" : "comment"
      }
    },
    "/tickets/{id}/comments/{commentID}" : {
      "delete" : {
        "description" : "Comment will be removed from the ticket.",
        "operationId" : "removeComment",
        "parameters" : [ {
          "description" : "Ticket ID",
          "example" : 8123,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Comment ID to remove",
          "example" : 0,
          "in" : "path",
          "name" : "commentID",
          "required" : true,
          "schema" : {
            "type" : "integer"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TicketResponse"
                }
              },
              "test" : {
                "example" : {
                  "artifacts" : [ {
                    "name" : "94d5cab6f5fe3422a447ab15436e7a672bc0c09a",
                    "status" : "unknown"
                  }, {
                    "name" : "http://www.customerviral.io/scalable/vertical/killer",
                    "status" : "clean"
                  }, {
                    "name" : "leadreintermediate.io",
                    "status" : "malicious"
                  } ],
                  "created" : "2021-10-02T16:04:59.078+0000",
                  "id" : 8123,
                  "modified" : "2021-10-02T16:04:59.078+0000",
                  "name" : "live zebra",
                  "owner" : "demo",
                  "playbooks" : {
                    "phishing" : {
                      "name" : "Phishing",
                      "tasks" : {
                        "block-iocs" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Block IOCs",
                          "order" : 6,
                          "type" : "task"
                        },
                        "block-sender" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Block sender",
                          "next" : {
                            "extract-iocs" : ""
                          },
                          "order" : 3,
                          "type" : "task"
                        },
                        "board" : {
                          "active" : true,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Board Involvement?",
                          "next" : {
                            "escalate" : "boardInvolved == true",
                            "mail-available" : "boardInvolved == false"
                          },
                          "order" : 0,
                          "schema" : {
                            "properties" : {
                              "boardInvolved" : {
                                "default" : false,
                                "title" : "A board member is involved.",
                                "type" : "boolean"
                              }
                            },
                            "required" : [ "boardInvolved" ],
                            "title" : "Board Involvement?",
                            "type" : "object"
                          },
                          "type" : "input"
                        },
                        "escalate" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Escalate to CISO",
                          "order" : 1,
                          "type" : "task"
                        },
                        "extract-iocs" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Extract IOCs",
                          "next" : {
                            "block-iocs" : ""
                          },
                          "order" : 5,
                          "schema" : {
                            "properties" : {
                              "iocs" : {
                                "items" : {
                                  "type" : "string"
                                },
                                "title" : "IOCs",
                                "type" : "array"
                              }
                            },
                            "title" : "Extract IOCs",
                            "type" : "object"
                          },
                          "type" : "input"
                        },
                        "mail-available" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Mail available",
                          "next" : {
                            "block-sender" : "schemaKey == 'yes'",
                            "extract-iocs" : "schemaKey == 'yes'",
                            "search-email-gateway" : "schemaKey == 'no'"
                          },
                          "order" : 2,
                          "schema" : {
                            "oneOf" : [ {
                              "properties" : {
                                "mail" : {
                                  "title" : "Mail",
                                  "type" : "string",
                                  "x-display" : "textarea"
                                },
                                "schemaKey" : {
                                  "const" : "yes",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "mail" ],
                              "title" : "Yes"
                            }, {
                              "properties" : {
                                "schemaKey" : {
                                  "const" : "no",
                                  "type" : "string"
                                }
                              },
                              "title" : "No"
                            } ],
                            "title" : "Mail available",
                            "type" : "object"
                          },
                          "type" : "input"
                        },
                        "search-email-gateway" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Search email gateway",
                          "next" : {
                            "extract-iocs" : ""
                          },
                          "order" : 4,
                          "type" : "task"
                        }
                      }
                    }
                  },
                  "references" : [ {
                    "href" : "https://www.leadmaximize.net/e-services/back-end",
                    "name" : "performance"
                  }, {
                    "href" : "http://www.corporateinteractive.name/rich",
                    "name" : "autumn"
                  }, {
                    "href" : "https://www.corporateintuitive.org/intuitive/platforms/integrate",
                    "name" : "suggest"
                  } ],
                  "schema" : "{\n  \"definitions\": {},\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$id\": \"https://example.com/object1618746510.json\",\n  \"title\": \"Event\",\n  \"type\": \"object\",\n  \"required\": [\n    \"severity\",\n    \"description\",\n    \"tlp\"\n  ],\n  \"properties\": {\n    \"severity\": {\n      \"$id\": \"#root/severity\",\n      \"title\": \"Severity\",\n      \"type\": \"string\",\n      \"default\": \"Medium\",\n      \"nx-enum\": [\n        \"Low\",\n        \"Medium\",\n        \"High\"\n      ],\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"Low\",\n          \"title\": \"Low\",\n          \"icon\": \"mdi-chevron-up\"\n        },\n        {\n          \"const\": \"Medium\",\n          \"title\": \"Medium\",\n          \"icon\": \"mdi-chevron-double-up\"\n        },\n        {\n          \"const\": \"High\",\n          \"title\": \"High\",\n          \"icon\": \"mdi-chevron-triple-up\"\n        }\n      ]\n    },\n    \"tlp\": {\n      \"$id\": \"#root/tlp\",\n      \"title\": \"TLP\",\n      \"type\": \"string\",\n      \"nx-enum\": [\n        \"White\",\n        \"Green\",\n        \"Amber\",\n        \"Red\"\n      ],\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"White\",\n          \"title\": \"White\",\n          \"icon\": \"mdi-alpha-w\"\n        },\n        {\n          \"const\": \"Green\",\n          \"title\": \"Green\",\n          \"icon\": \"mdi-alpha-g\"\n        },\n        {\n          \"const\": \"Amber\",\n          \"title\": \"Amber\",\n          \"icon\": \"mdi-alpha-a\"\n        },\n        {\n          \"const\": \"Red\",\n          \"title\": \"Red\",\n          \"icon\": \"mdi-alpha-r\"\n        }\n      ]\n    },\n    \"description\": {\n      \"$id\": \"#root/description\",\n      \"title\": \"Description\",\n      \"type\": \"string\",\n      \"x-display\": \"textarea\",\n      \"x-class\": \"pr-2\"\n    }\n  }\n}\n",
                  "status" : "closed",
                  "type" : "incident"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "ticket:write" ]
        } ],
        "summary" : "Remove an comment from an ticket",
        "tags" : [ "tickets" ]
      }
    },
    "/tickets/{id}/files" : {
      "put" : {
        "description" : "Link files to an ticket. The files themself will be stored in object storage.",
        "operationId" : "linkFiles",
        "parameters" : [ {
          "description" : "Ticket ID",
          "example" : 8125,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/File"
                },
                "type" : "array"
              }
            }
          },
          "description" : "Added files",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TicketResponse"
                }
              },
              "test" : {
                "example" : {
                  "created" : "2021-10-02T16:04:59.078+0000",
                  "files" : [ {
                    "key" : "myfile",
                    "name" : "document.doc"
                  } ],
                  "id" : 8125,
                  "modified" : "2021-10-02T16:04:59.078+0000",
                  "name" : "phishing from selenafadel@von.com detected",
                  "owner" : "demo",
                  "references" : [ {
                    "href" : "https://www.seniorleading-edge.name/users/efficient",
                    "name" : "recovery"
                  }, {
                    "href" : "http://www.dynamicseamless.com/clicks-and-mortar",
                    "name" : "force"
                  }, {
                    "href" : "http://www.leadscalable.biz/envisioneer",
                    "name" : "fund"
                  } ],
                  "schema" : "{}",
                  "status" : "closed",
                  "tickets" : [ {
                    "created" : "2021-10-02T16:04:59.078+0000",
                    "id" : 8126,
                    "modified" : "2021-10-02T16:04:59.078+0000",
                    "name" : "Surfaceintroduce virus detected",
                    "owner" : "demo",
                    "references" : [ {
                      "href" : "http://www.centralworld-class.io/synthesize",
                      "name" : "university"
                    }, {
                      "href" : "https://www.futurevirtual.org/supply-chains/markets/sticky/iterate",
                      "name" : "goal"
                    }, {
                      "href" : "http://www.chiefsyndicate.io/action-items",
                      "name" : "unemployment"
                    } ],
                    "schema" : "{}",
                    "status" : "closed",
                    "type" : "alert"
                  } ],
                  "type" : "alert"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "ticket:write" ]
        } ],
        "summary" : "Link files to an ticket",
        "tags" : [ "tickets" ],
        "x-codegen-request-body-name" : "files"
      }
    },
    "/tickets/{id}/playbooks" : {
      "post" : {
        "operationId" : "addTicketPlaybook",
        "parameters" : [ {
          "description" : "Ticket ID",
          "example" : 8125,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PlaybookTemplateForm"
              }
            }
          },
          "description" : "Ticket playbook object that needs to be added",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TicketResponse"
                }
              },
              "test" : {
                "example" : {
                  "created" : "1985-04-12T23:20:50.520+0000",
                  "id" : 8125,
                  "modified" : "1985-04-12T23:20:50.520+0000",
                  "name" : "phishing from selenafadel@von.com detected",
                  "owner" : "demo",
                  "playbooks" : {
                    "simple" : {
                      "name" : "Simple",
                      "tasks" : {
                        "escalate" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Escalate to malware team",
                          "order" : 2,
                          "type" : "task"
                        },
                        "hash" : {
                          "active" : false,
                          "automation" : "hash.sha1",
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Hash the malware",
                          "next" : {
                            "escalate" : ""
                          },
                          "order" : 1,
                          "payload" : {
                            "default" : "playbook.tasks['input'].data['malware']"
                          },
                          "type" : "automation"
                        },
                        "input" : {
                          "active" : true,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Upload malware if possible",
                          "next" : {
                            "hash" : "malware != ''"
                          },
                          "order" : 0,
                          "schema" : {
                            "properties" : {
                              "malware" : {
                                "default" : "",
                                "title" : "Select malware",
                                "type" : "string"
                              }
                            },
                            "title" : "Malware",
                            "type" : "object"
                          },
                          "type" : "input"
                        }
                      }
                    }
                  },
                  "references" : [ {
                    "href" : "https://www.seniorleading-edge.name/users/efficient",
                    "name" : "recovery"
                  }, {
                    "href" : "http://www.dynamicseamless.com/clicks-and-mortar",
                    "name" : "force"
                  }, {
                    "href" : "http://www.leadscalable.biz/envisioneer",
                    "name" : "fund"
                  } ],
                  "schema" : "{}",
                  "status" : "closed",
                  "tickets" : [ {
                    "created" : "2021-10-02T16:04:59.078+0000",
                    "id" : 8126,
                    "modified" : "2021-10-02T16:04:59.078+0000",
                    "name" : "Surfaceintroduce virus detected",
                    "owner" : "demo",
                    "references" : [ {
                      "href" : "http://www.centralworld-class.io/synthesize",
                      "name" : "university"
                    }, {
                      "href" : "https://www.futurevirtual.org/supply-chains/markets/sticky/iterate",
                      "name" : "goal"
                    }, {
                      "href" : "http://www.chiefsyndicate.io/action-items",
                      "name" : "unemployment"
                    } ],
                    "schema" : "{}",
                    "status" : "closed",
                    "type" : "alert"
                  } ],
                  "type" : "alert"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "summary" : "Add a new ticket playbook",
        "tags" : [ "tickets" ],
        "x-codegen-request-body-name" : "playbook"
      }
    },
    "/tickets/{id}/playbooks/{playbookID}" : {
      "delete" : {
        "operationId" : "removeTicketPlaybook",
        "parameters" : [ {
          "description" : "Ticket ID",
          "example" : 8123,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Playbook ID",
          "example" : "phishing",
          "in" : "path",
          "name" : "playbookID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TicketResponse"
                }
              },
              "test" : {
                "example" : {
                  "artifacts" : [ {
                    "name" : "94d5cab6f5fe3422a447ab15436e7a672bc0c09a",
                    "status" : "unknown"
                  }, {
                    "name" : "http://www.customerviral.io/scalable/vertical/killer",
                    "status" : "clean"
                  }, {
                    "name" : "leadreintermediate.io",
                    "status" : "malicious"
                  } ],
                  "created" : "1985-04-12T23:20:50.520+0000",
                  "id" : 8123,
                  "modified" : "1985-04-12T23:20:50.520+0000",
                  "name" : "live zebra",
                  "owner" : "demo",
                  "references" : [ {
                    "href" : "https://www.leadmaximize.net/e-services/back-end",
                    "name" : "performance"
                  }, {
                    "href" : "http://www.corporateinteractive.name/rich",
                    "name" : "autumn"
                  }, {
                    "href" : "https://www.corporateintuitive.org/intuitive/platforms/integrate",
                    "name" : "suggest"
                  } ],
                  "schema" : "{\n  \"definitions\": {},\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$id\": \"https://example.com/object1618746510.json\",\n  \"title\": \"Event\",\n  \"type\": \"object\",\n  \"required\": [\n    \"severity\",\n    \"description\",\n    \"tlp\"\n  ],\n  \"properties\": {\n    \"severity\": {\n      \"$id\": \"#root/severity\",\n      \"title\": \"Severity\",\n      \"type\": \"string\",\n      \"default\": \"Medium\",\n      \"nx-enum\": [\n        \"Low\",\n        \"Medium\",\n        \"High\"\n      ],\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"Low\",\n          \"title\": \"Low\",\n          \"icon\": \"mdi-chevron-up\"\n        },\n        {\n          \"const\": \"Medium\",\n          \"title\": \"Medium\",\n          \"icon\": \"mdi-chevron-double-up\"\n        },\n        {\n          \"const\": \"High\",\n          \"title\": \"High\",\n          \"icon\": \"mdi-chevron-triple-up\"\n        }\n      ]\n    },\n    \"tlp\": {\n      \"$id\": \"#root/tlp\",\n      \"title\": \"TLP\",\n      \"type\": \"string\",\n      \"nx-enum\": [\n        \"White\",\n        \"Green\",\n        \"Amber\",\n        \"Red\"\n      ],\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"White\",\n          \"title\": \"White\",\n          \"icon\": \"mdi-alpha-w\"\n        },\n        {\n          \"const\": \"Green\",\n          \"title\": \"Green\",\n          \"icon\": \"mdi-alpha-g\"\n        },\n        {\n          \"const\": \"Amber\",\n          \"title\": \"Amber\",\n          \"icon\": \"mdi-alpha-a\"\n        },\n        {\n          \"const\": \"Red\",\n          \"title\": \"Red\",\n          \"icon\": \"mdi-alpha-r\"\n        }\n      ]\n    },\n    \"description\": {\n      \"$id\": \"#root/description\",\n      \"title\": \"Description\",\n      \"type\": \"string\",\n      \"x-display\": \"textarea\",\n      \"x-class\": \"pr-2\"\n    }\n  }\n}\n",
                  "status" : "closed",
                  "type" : "incident"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "ticket:write" ]
        } ],
        "summary" : "Remove an ticket playbook",
        "tags" : [ "tickets" ]
      }
    },
    "/tickets/{id}/playbooks/{playbookID}/task/{taskID}" : {
      "put" : {
        "operationId" : "setTask",
        "parameters" : [ {
          "description" : "Ticket ID",
          "example" : 8123,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Playbook ID",
          "example" : "phishing",
          "in" : "path",
          "name" : "playbookID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Task ID",
          "example" : "board",
          "in" : "path",
          "name" : "taskID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Task"
              }
            }
          },
          "description" : "Task",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TicketResponse"
                }
              },
              "test" : {
                "example" : {
                  "artifacts" : [ {
                    "name" : "94d5cab6f5fe3422a447ab15436e7a672bc0c09a",
                    "status" : "unknown"
                  }, {
                    "name" : "http://www.customerviral.io/scalable/vertical/killer",
                    "status" : "clean"
                  }, {
                    "name" : "leadreintermediate.io",
                    "status" : "malicious"
                  } ],
                  "created" : "2021-10-02T16:04:59.078+0000",
                  "id" : 8123,
                  "modified" : "2021-10-02T16:04:59.078+0000",
                  "name" : "live zebra",
                  "owner" : "demo",
                  "playbooks" : {
                    "phishing" : {
                      "name" : "Phishing",
                      "tasks" : {
                        "block-iocs" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Block IOCs",
                          "order" : 6,
                          "type" : "task"
                        },
                        "block-sender" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Block sender",
                          "next" : {
                            "extract-iocs" : ""
                          },
                          "order" : 3,
                          "type" : "task"
                        },
                        "board" : {
                          "active" : true,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "data" : {
                            "boardInvolved" : true
                          },
                          "done" : false,
                          "name" : "Board Involvement?",
                          "next" : {
                            "escalate" : "boardInvolved == true",
                            "mail-available" : "boardInvolved == false"
                          },
                          "order" : 0,
                          "schema" : {
                            "properties" : {
                              "boardInvolved" : {
                                "default" : false,
                                "title" : "A board member is involved.",
                                "type" : "boolean"
                              }
                            },
                            "required" : [ "boardInvolved" ],
                            "title" : "Board Involvement?",
                            "type" : "object"
                          },
                          "type" : "input"
                        },
                        "escalate" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Escalate to CISO",
                          "order" : 1,
                          "type" : "task"
                        },
                        "extract-iocs" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Extract IOCs",
                          "next" : {
                            "block-iocs" : ""
                          },
                          "order" : 5,
                          "schema" : {
                            "properties" : {
                              "iocs" : {
                                "items" : {
                                  "type" : "string"
                                },
                                "title" : "IOCs",
                                "type" : "array"
                              }
                            },
                            "title" : "Extract IOCs",
                            "type" : "object"
                          },
                          "type" : "input"
                        },
                        "mail-available" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Mail available",
                          "next" : {
                            "block-sender" : "schemaKey == 'yes'",
                            "extract-iocs" : "schemaKey == 'yes'",
                            "search-email-gateway" : "schemaKey == 'no'"
                          },
                          "order" : 2,
                          "schema" : {
                            "oneOf" : [ {
                              "properties" : {
                                "mail" : {
                                  "title" : "Mail",
                                  "type" : "string",
                                  "x-display" : "textarea"
                                },
                                "schemaKey" : {
                                  "const" : "yes",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "mail" ],
                              "title" : "Yes"
                            }, {
                              "properties" : {
                                "schemaKey" : {
                                  "const" : "no",
                                  "type" : "string"
                                }
                              },
                              "title" : "No"
                            } ],
                            "title" : "Mail available",
                            "type" : "object"
                          },
                          "type" : "input"
                        },
                        "search-email-gateway" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Search email gateway",
                          "next" : {
                            "extract-iocs" : ""
                          },
                          "order" : 4,
                          "type" : "task"
                        }
                      }
                    }
                  },
                  "references" : [ {
                    "href" : "https://www.leadmaximize.net/e-services/back-end",
                    "name" : "performance"
                  }, {
                    "href" : "http://www.corporateinteractive.name/rich",
                    "name" : "autumn"
                  }, {
                    "href" : "https://www.corporateintuitive.org/intuitive/platforms/integrate",
                    "name" : "suggest"
                  } ],
                  "schema" : "{\n  \"definitions\": {},\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$id\": \"https://example.com/object1618746510.json\",\n  \"title\": \"Event\",\n  \"type\": \"object\",\n  \"required\": [\n    \"severity\",\n    \"description\",\n    \"tlp\"\n  ],\n  \"properties\": {\n    \"severity\": {\n      \"$id\": \"#root/severity\",\n      \"title\": \"Severity\",\n      \"type\": \"string\",\n      \"default\": \"Medium\",\n      \"nx-enum\": [\n        \"Low\",\n        \"Medium\",\n        \"High\"\n      ],\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"Low\",\n          \"title\": \"Low\",\n          \"icon\": \"mdi-chevron-up\"\n        },\n        {\n          \"const\": \"Medium\",\n          \"title\": \"Medium\",\n          \"icon\": \"mdi-chevron-double-up\"\n        },\n        {\n          \"const\": \"High\",\n          \"title\": \"High\",\n          \"icon\": \"mdi-chevron-triple-up\"\n        }\n      ]\n    },\n    \"tlp\": {\n      \"$id\": \"#root/tlp\",\n      \"title\": \"TLP\",\n      \"type\": \"string\",\n      \"nx-enum\": [\n        \"White\",\n        \"Green\",\n        \"Amber\",\n        \"Red\"\n      ],\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"White\",\n          \"title\": \"White\",\n          \"icon\": \"mdi-alpha-w\"\n        },\n        {\n          \"const\": \"Green\",\n          \"title\": \"Green\",\n          \"icon\": \"mdi-alpha-g\"\n        },\n        {\n          \"const\": \"Amber\",\n          \"title\": \"Amber\",\n          \"icon\": \"mdi-alpha-a\"\n        },\n        {\n          \"const\": \"Red\",\n          \"title\": \"Red\",\n          \"icon\": \"mdi-alpha-r\"\n        }\n      ]\n    },\n    \"description\": {\n      \"$id\": \"#root/description\",\n      \"title\": \"Description\",\n      \"type\": \"string\",\n      \"x-display\": \"textarea\",\n      \"x-class\": \"pr-2\"\n    }\n  }\n}\n",
                  "status" : "closed",
                  "type" : "incident"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "ticket:write" ]
        } ],
        "summary" : "Set a ticket playbook task",
        "tags" : [ "tickets" ],
        "x-codegen-request-body-name" : "task"
      }
    },
    "/tickets/{id}/playbooks/{playbookID}/task/{taskID}/complete" : {
      "put" : {
        "operationId" : "completeTask",
        "parameters" : [ {
          "description" : "Ticket ID",
          "example" : 8123,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Playbook ID",
          "example" : "phishing",
          "in" : "path",
          "name" : "playbookID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Task ID",
          "example" : "board",
          "in" : "path",
          "name" : "taskID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          },
          "description" : "Ticket playbook object that needs to be added",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TicketResponse"
                }
              },
              "test" : {
                "example" : {
                  "artifacts" : [ {
                    "name" : "94d5cab6f5fe3422a447ab15436e7a672bc0c09a",
                    "status" : "unknown"
                  }, {
                    "name" : "http://www.customerviral.io/scalable/vertical/killer",
                    "status" : "clean"
                  }, {
                    "name" : "leadreintermediate.io",
                    "status" : "malicious"
                  } ],
                  "created" : "2021-10-02T16:04:59.078+0000",
                  "id" : 8123,
                  "modified" : "2021-10-02T16:04:59.078+0000",
                  "name" : "live zebra",
                  "owner" : "demo",
                  "playbooks" : {
                    "phishing" : {
                      "name" : "Phishing",
                      "tasks" : {
                        "block-iocs" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Block IOCs",
                          "order" : 6,
                          "type" : "task"
                        },
                        "block-sender" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Block sender",
                          "next" : {
                            "extract-iocs" : ""
                          },
                          "order" : 3,
                          "type" : "task"
                        },
                        "board" : {
                          "active" : false,
                          "closed" : "2021-10-02T16:04:59.078+0000",
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "data" : {
                            "boardInvolved" : true
                          },
                          "done" : true,
                          "name" : "Board Involvement?",
                          "next" : {
                            "escalate" : "boardInvolved == true",
                            "mail-available" : "boardInvolved == false"
                          },
                          "order" : 0,
                          "schema" : {
                            "properties" : {
                              "boardInvolved" : {
                                "default" : false,
                                "title" : "A board member is involved.",
                                "type" : "boolean"
                              }
                            },
                            "required" : [ "boardInvolved" ],
                            "title" : "Board Involvement?",
                            "type" : "object"
                          },
                          "type" : "input"
                        },
                        "escalate" : {
                          "active" : true,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Escalate to CISO",
                          "order" : 1,
                          "type" : "task"
                        },
                        "extract-iocs" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Extract IOCs",
                          "next" : {
                            "block-iocs" : ""
                          },
                          "order" : 5,
                          "schema" : {
                            "properties" : {
                              "iocs" : {
                                "items" : {
                                  "type" : "string"
                                },
                                "title" : "IOCs",
                                "type" : "array"
                              }
                            },
                            "title" : "Extract IOCs",
                            "type" : "object"
                          },
                          "type" : "input"
                        },
                        "mail-available" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Mail available",
                          "next" : {
                            "block-sender" : "schemaKey == 'yes'",
                            "extract-iocs" : "schemaKey == 'yes'",
                            "search-email-gateway" : "schemaKey == 'no'"
                          },
                          "order" : 2,
                          "schema" : {
                            "oneOf" : [ {
                              "properties" : {
                                "mail" : {
                                  "title" : "Mail",
                                  "type" : "string",
                                  "x-display" : "textarea"
                                },
                                "schemaKey" : {
                                  "const" : "yes",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "mail" ],
                              "title" : "Yes"
                            }, {
                              "properties" : {
                                "schemaKey" : {
                                  "const" : "no",
                                  "type" : "string"
                                }
                              },
                              "title" : "No"
                            } ],
                            "title" : "Mail available",
                            "type" : "object"
                          },
                          "type" : "input"
                        },
                        "search-email-gateway" : {
                          "active" : false,
                          "created" : "2021-10-02T16:04:59.078+0000",
                          "done" : false,
                          "name" : "Search email gateway",
                          "next" : {
                            "extract-iocs" : ""
                          },
                          "order" : 4,
                          "type" : "task"
                        }
                      }
                    }
                  },
                  "references" : [ {
                    "href" : "https://www.leadmaximize.net/e-services/back-end",
                    "name" : "performance"
                  }, {
                    "href" : "http://www.corporateinteractive.name/rich",
                    "name" : "autumn"
                  }, {
                    "href" : "https://www.corporateintuitive.org/intuitive/platforms/integrate",
                    "name" : "suggest"
                  } ],
                  "schema" : "{\n  \"definitions\": {},\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$id\": \"https://example.com/object1618746510.json\",\n  \"title\": \"Event\",\n  \"type\": \"object\",\n  \"required\": [\n    \"severity\",\n    \"description\",\n    \"tlp\"\n  ],\n  \"properties\": {\n    \"severity\": {\n      \"$id\": \"#root/severity\",\n      \"title\": \"Severity\",\n      \"type\": \"string\",\n      \"default\": \"Medium\",\n      \"nx-enum\": [\n        \"Low\",\n        \"Medium\",\n        \"High\"\n      ],\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"Low\",\n          \"title\": \"Low\",\n          \"icon\": \"mdi-chevron-up\"\n        },\n        {\n          \"const\": \"Medium\",\n          \"title\": \"Medium\",\n          \"icon\": \"mdi-chevron-double-up\"\n        },\n        {\n          \"const\": \"High\",\n          \"title\": \"High\",\n          \"icon\": \"mdi-chevron-triple-up\"\n        }\n      ]\n    },\n    \"tlp\": {\n      \"$id\": \"#root/tlp\",\n      \"title\": \"TLP\",\n      \"type\": \"string\",\n      \"nx-enum\": [\n        \"White\",\n        \"Green\",\n        \"Amber\",\n        \"Red\"\n      ],\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"White\",\n          \"title\": \"White\",\n          \"icon\": \"mdi-alpha-w\"\n        },\n        {\n          \"const\": \"Green\",\n          \"title\": \"Green\",\n          \"icon\": \"mdi-alpha-g\"\n        },\n        {\n          \"const\": \"Amber\",\n          \"title\": \"Amber\",\n          \"icon\": \"mdi-alpha-a\"\n        },\n        {\n          \"const\": \"Red\",\n          \"title\": \"Red\",\n          \"icon\": \"mdi-alpha-r\"\n        }\n      ]\n    },\n    \"description\": {\n      \"$id\": \"#root/description\",\n      \"title\": \"Description\",\n      \"type\": \"string\",\n      \"x-display\": \"textarea\",\n      \"x-class\": \"pr-2\"\n    }\n  }\n}\n",
                  "status" : "closed",
                  "type" : "incident"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "ticket:write" ]
        } ],
        "summary" : "Complete ticket playbook task",
        "tags" : [ "tickets" ],
        "x-codegen-request-body-name" : "data"
      }
    },
    "/tickets/{id}/playbooks/{playbookID}/task/{taskID}/run" : {
      "post" : {
        "operationId" : "runTask",
        "parameters" : [ {
          "description" : "Ticket ID",
          "example" : 8123,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        }, {
          "description" : "Playbook ID",
          "example" : "phishing",
          "in" : "path",
          "name" : "playbookID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "Task ID",
          "example" : "board",
          "in" : "path",
          "name" : "taskID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "content" : { },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "ticket:write" ]
        } ],
        "summary" : "Run ticket playbook task",
        "tags" : [ "tickets" ]
      }
    },
    "/tickets/{id}/references" : {
      "put" : {
        "operationId" : "setReferences",
        "parameters" : [ {
          "description" : "Ticket ID",
          "example" : 8125,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/Reference"
                },
                "type" : "array"
              }
            }
          },
          "description" : "All ticket references",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TicketResponse"
                }
              },
              "test" : {
                "example" : {
                  "created" : "2021-10-02T16:04:59.078+0000",
                  "id" : 8125,
                  "modified" : "2021-10-02T16:04:59.078+0000",
                  "name" : "phishing from selenafadel@von.com detected",
                  "owner" : "demo",
                  "references" : [ {
                    "href" : "http://www.leadscalable.biz/envisioneer",
                    "name" : "fund"
                  } ],
                  "schema" : "{}",
                  "status" : "closed",
                  "tickets" : [ {
                    "created" : "2021-10-02T16:04:59.078+0000",
                    "id" : 8126,
                    "modified" : "2021-10-02T16:04:59.078+0000",
                    "name" : "Surfaceintroduce virus detected",
                    "owner" : "demo",
                    "references" : [ {
                      "href" : "http://www.centralworld-class.io/synthesize",
                      "name" : "university"
                    }, {
                      "href" : "https://www.futurevirtual.org/supply-chains/markets/sticky/iterate",
                      "name" : "goal"
                    }, {
                      "href" : "http://www.chiefsyndicate.io/action-items",
                      "name" : "unemployment"
                    } ],
                    "schema" : "{}",
                    "status" : "closed",
                    "type" : "alert"
                  } ],
                  "type" : "alert"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "ticket:write" ]
        } ],
        "summary" : "Set ticket references",
        "tags" : [ "tickets" ],
        "x-codegen-request-body-name" : "references"
      }
    },
    "/tickets/{id}/schema" : {
      "put" : {
        "operationId" : "setSchema",
        "parameters" : [ {
          "description" : "Ticket ID",
          "example" : 8125,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "string"
              }
            }
          },
          "description" : "New ticket schema",
          "required" : false
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TicketResponse"
                }
              },
              "test" : {
                "example" : {
                  "created" : "2021-10-02T16:04:59.078+0000",
                  "id" : 8125,
                  "modified" : "2021-10-02T16:04:59.078+0000",
                  "name" : "phishing from selenafadel@von.com detected",
                  "owner" : "demo",
                  "references" : [ {
                    "href" : "https://www.seniorleading-edge.name/users/efficient",
                    "name" : "recovery"
                  }, {
                    "href" : "http://www.dynamicseamless.com/clicks-and-mortar",
                    "name" : "force"
                  }, {
                    "href" : "http://www.leadscalable.biz/envisioneer",
                    "name" : "fund"
                  } ],
                  "schema" : "{}",
                  "status" : "closed",
                  "tickets" : [ {
                    "created" : "2021-10-02T16:04:59.078+0000",
                    "id" : 8126,
                    "modified" : "2021-10-02T16:04:59.078+0000",
                    "name" : "Surfaceintroduce virus detected",
                    "owner" : "demo",
                    "references" : [ {
                      "href" : "http://www.centralworld-class.io/synthesize",
                      "name" : "university"
                    }, {
                      "href" : "https://www.futurevirtual.org/supply-chains/markets/sticky/iterate",
                      "name" : "goal"
                    }, {
                      "href" : "http://www.chiefsyndicate.io/action-items",
                      "name" : "unemployment"
                    } ],
                    "schema" : "{}",
                    "status" : "closed",
                    "type" : "alert"
                  } ],
                  "type" : "alert"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "ticket:write" ]
        } ],
        "summary" : "Set ticket schema",
        "tags" : [ "tickets" ],
        "x-codegen-request-body-name" : "schema"
      }
    },
    "/tickets/{id}/tickets" : {
      "delete" : {
        "operationId" : "unlinkTicket",
        "parameters" : [ {
          "description" : "Ticket ID",
          "example" : 8126,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "format" : "int64",
                "type" : "integer"
              }
            }
          },
          "description" : "Added ticket ID",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TicketResponse"
                }
              },
              "test" : {
                "example" : {
                  "created" : "2021-10-02T16:04:59.078+0000",
                  "id" : 8126,
                  "modified" : "2021-10-02T16:04:59.078+0000",
                  "name" : "Surfaceintroduce virus detected",
                  "owner" : "demo",
                  "references" : [ {
                    "href" : "http://www.centralworld-class.io/synthesize",
                    "name" : "university"
                  }, {
                    "href" : "https://www.futurevirtual.org/supply-chains/markets/sticky/iterate",
                    "name" : "goal"
                  }, {
                    "href" : "http://www.chiefsyndicate.io/action-items",
                    "name" : "unemployment"
                  } ],
                  "schema" : "{}",
                  "status" : "closed",
                  "type" : "alert"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "ticket:write" ]
        } ],
        "summary" : "Unlink an ticket to an ticket",
        "tags" : [ "tickets" ],
        "x-codegen-request-body-name" : "linkedID"
      },
      "patch" : {
        "operationId" : "linkTicket",
        "parameters" : [ {
          "description" : "Ticket ID",
          "example" : 8126,
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "format" : "int64",
            "type" : "integer"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "format" : "int64",
                "type" : "integer"
              }
            }
          },
          "description" : "Added ticket ID",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TicketResponse"
                }
              },
              "test" : {
                "example" : {
                  "created" : "2021-10-02T16:04:59.078+0000",
                  "id" : 8126,
                  "modified" : "2021-10-02T16:04:59.078+0000",
                  "name" : "Surfaceintroduce virus detected",
                  "owner" : "demo",
                  "references" : [ {
                    "href" : "http://www.centralworld-class.io/synthesize",
                    "name" : "university"
                  }, {
                    "href" : "https://www.futurevirtual.org/supply-chains/markets/sticky/iterate",
                    "name" : "goal"
                  }, {
                    "href" : "http://www.chiefsyndicate.io/action-items",
                    "name" : "unemployment"
                  } ],
                  "schema" : "{}",
                  "status" : "closed",
                  "tickets" : [ {
                    "artifacts" : [ {
                      "name" : "94d5cab6f5fe3422a447ab15436e7a672bc0c09a",
                      "status" : "unknown"
                    }, {
                      "name" : "http://www.customerviral.io/scalable/vertical/killer",
                      "status" : "clean"
                    }, {
                      "name" : "leadreintermediate.io",
                      "status" : "malicious"
                    } ],
                    "created" : "2021-10-02T16:04:59.078+0000",
                    "id" : 8123,
                    "modified" : "2021-10-02T16:04:59.078+0000",
                    "name" : "live zebra",
                    "owner" : "demo",
                    "playbooks" : {
                      "phishing" : {
                        "name" : "Phishing",
                        "tasks" : {
                          "block-iocs" : {
                            "created" : "2021-10-02T16:04:59.078+0000",
                            "done" : false,
                            "name" : "Block IOCs",
                            "type" : "task"
                          },
                          "block-sender" : {
                            "created" : "2021-10-02T16:04:59.078+0000",
                            "done" : false,
                            "name" : "Block sender",
                            "next" : {
                              "extract-iocs" : ""
                            },
                            "type" : "task"
                          },
                          "board" : {
                            "created" : "2021-10-02T16:04:59.078+0000",
                            "done" : false,
                            "name" : "Board Involvement?",
                            "next" : {
                              "escalate" : "boardInvolved == true",
                              "mail-available" : "boardInvolved == false"
                            },
                            "schema" : {
                              "properties" : {
                                "boardInvolved" : {
                                  "default" : false,
                                  "title" : "A board member is involved.",
                                  "type" : "boolean"
                                }
                              },
                              "required" : [ "boardInvolved" ],
                              "title" : "Board Involvement?",
                              "type" : "object"
                            },
                            "type" : "input"
                          },
                          "escalate" : {
                            "created" : "2021-10-02T16:04:59.078+0000",
                            "done" : false,
                            "name" : "Escalate to CISO",
                            "type" : "task"
                          },
                          "extract-iocs" : {
                            "created" : "2021-10-02T16:04:59.078+0000",
                            "done" : false,
                            "name" : "Extract IOCs",
                            "next" : {
                              "block-iocs" : ""
                            },
                            "schema" : {
                              "properties" : {
                                "iocs" : {
                                  "items" : {
                                    "type" : "string"
                                  },
                                  "title" : "IOCs",
                                  "type" : "array"
                                }
                              },
                              "title" : "Extract IOCs",
                              "type" : "object"
                            },
                            "type" : "input"
                          },
                          "mail-available" : {
                            "created" : "2021-10-02T16:04:59.078+0000",
                            "done" : false,
                            "name" : "Mail available",
                            "next" : {
                              "block-sender" : "schemaKey == 'yes'",
                              "extract-iocs" : "schemaKey == 'yes'",
                              "search-email-gateway" : "schemaKey == 'no'"
                            },
                            "schema" : {
                              "oneOf" : [ {
                                "properties" : {
                                  "mail" : {
                                    "title" : "Mail",
                                    "type" : "string",
                                    "x-display" : "textarea"
                                  },
                                  "schemaKey" : {
                                    "const" : "yes",
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "mail" ],
                                "title" : "Yes"
                              }, {
                                "properties" : {
                                  "schemaKey" : {
                                    "const" : "no",
                                    "type" : "string"
                                  }
                                },
                                "title" : "No"
                              } ],
                              "title" : "Mail available",
                              "type" : "object"
                            },
                            "type" : "input"
                          },
                          "search-email-gateway" : {
                            "created" : "2021-10-02T16:04:59.078+0000",
                            "done" : false,
                            "name" : "Search email gateway",
                            "next" : {
                              "extract-iocs" : ""
                            },
                            "type" : "task"
                          }
                        }
                      }
                    },
                    "references" : [ {
                      "href" : "https://www.leadmaximize.net/e-services/back-end",
                      "name" : "performance"
                    }, {
                      "href" : "http://www.corporateinteractive.name/rich",
                      "name" : "autumn"
                    }, {
                      "href" : "https://www.corporateintuitive.org/intuitive/platforms/integrate",
                      "name" : "suggest"
                    } ],
                    "schema" : "{\n  \"definitions\": {},\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"$id\": \"https://example.com/object1618746510.json\",\n  \"title\": \"Event\",\n  \"type\": \"object\",\n  \"required\": [\n    \"severity\",\n    \"description\",\n    \"tlp\"\n  ],\n  \"properties\": {\n    \"severity\": {\n      \"$id\": \"#root/severity\",\n      \"title\": \"Severity\",\n      \"type\": \"string\",\n      \"default\": \"Medium\",\n      \"nx-enum\": [\n        \"Low\",\n        \"Medium\",\n        \"High\"\n      ],\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"Low\",\n          \"title\": \"Low\",\n          \"icon\": \"mdi-chevron-up\"\n        },\n        {\n          \"const\": \"Medium\",\n          \"title\": \"Medium\",\n          \"icon\": \"mdi-chevron-double-up\"\n        },\n        {\n          \"const\": \"High\",\n          \"title\": \"High\",\n          \"icon\": \"mdi-chevron-triple-up\"\n        }\n      ]\n    },\n    \"tlp\": {\n      \"$id\": \"#root/tlp\",\n      \"title\": \"TLP\",\n      \"type\": \"string\",\n      \"nx-enum\": [\n        \"White\",\n        \"Green\",\n        \"Amber\",\n        \"Red\"\n      ],\n      \"x-cols\": 6,\n      \"x-class\": \"pr-2\",\n      \"x-display\": \"icon\",\n      \"x-itemIcon\": \"icon\",\n      \"oneOf\": [\n        {\n          \"const\": \"White\",\n          \"title\": \"White\",\n          \"icon\": \"mdi-alpha-w\"\n        },\n        {\n          \"const\": \"Green\",\n          \"title\": \"Green\",\n          \"icon\": \"mdi-alpha-g\"\n        },\n        {\n          \"const\": \"Amber\",\n          \"title\": \"Amber\",\n          \"icon\": \"mdi-alpha-a\"\n        },\n        {\n          \"const\": \"Red\",\n          \"title\": \"Red\",\n          \"icon\": \"mdi-alpha-r\"\n        }\n      ]\n    },\n    \"description\": {\n      \"$id\": \"#root/description\",\n      \"title\": \"Description\",\n      \"type\": \"string\",\n      \"x-display\": \"textarea\",\n      \"x-class\": \"pr-2\"\n    }\n  }\n}\n",
                    "status" : "closed",
                    "type" : "incident"
                  }, {
                    "created" : "2021-10-02T16:04:59.078+0000",
                    "id" : 8125,
                    "modified" : "2021-10-02T16:04:59.078+0000",
                    "name" : "phishing from selenafadel@von.com detected",
                    "owner" : "demo",
                    "references" : [ {
                      "href" : "https://www.seniorleading-edge.name/users/efficient",
                      "name" : "recovery"
                    }, {
                      "href" : "http://www.dynamicseamless.com/clicks-and-mortar",
                      "name" : "force"
                    }, {
                      "href" : "http://www.leadscalable.biz/envisioneer",
                      "name" : "fund"
                    } ],
                    "schema" : "{}",
                    "status" : "closed",
                    "type" : "alert"
                  } ],
                  "type" : "alert"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "ticket:write" ]
        } ],
        "summary" : "Link an ticket to an ticket",
        "tags" : [ "tickets" ],
        "x-codegen-request-body-name" : "linkedID"
      }
    },
    "/tickets/batch" : {
      "post" : {
        "operationId" : "createTicketBatch",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "items" : {
                  "$ref" : "#/components/schemas/TicketForm"
                },
                "type" : "array"
              }
            }
          },
          "description" : "New ticket",
          "required" : true
        },
        "responses" : {
          "204" : {
            "content" : { },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "ticket:write" ]
        } ],
        "summary" : "Create a new tickets in batch",
        "tags" : [ "tickets" ],
        "x-codegen-request-body-name" : "ticket"
      }
    },
    "/tickettypes" : {
      "get" : {
        "operationId" : "listTicketTypes",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/TicketTypeResponse"
                  },
                  "type" : "array"
                }
              },
              "test" : {
                "example" : [ {
                  "default_playbooks" : [ ],
                  "default_template" : "default",
                  "icon" : "mdi-alert",
                  "id" : "alert",
                  "name" : "Alerts"
                }, {
                  "default_playbooks" : [ ],
                  "default_template" : "default",
                  "icon" : "mdi-radioactive",
                  "id" : "incident",
                  "name" : "Incidents"
                }, {
                  "default_playbooks" : [ ],
                  "default_template" : "default",
                  "icon" : "mdi-fingerprint",
                  "id" : "investigation",
                  "name" : "Forensic Investigations"
                }, {
                  "default_playbooks" : [ ],
                  "default_template" : "default",
                  "icon" : "mdi-target",
                  "id" : "hunt",
                  "name" : "Threat Hunting"
                } ]
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "tickettype:read" ]
        } ],
        "summary" : "List tickettypes",
        "tags" : [ "tickettypes" ]
      },
      "post" : {
        "operationId" : "createTicketType",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TicketTypeForm"
              }
            }
          },
          "description" : "New tickettype",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TicketTypeResponse"
                }
              },
              "test" : {
                "example" : {
                  "default_playbooks" : [ ],
                  "default_template" : "default",
                  "icon" : "mdi-newspaper-variant-outline",
                  "id" : "ti-tickets",
                  "name" : "TI Tickets"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "tickettype:write" ]
        } ],
        "summary" : "Create a new tickettype",
        "tags" : [ "tickettypes" ],
        "x-codegen-request-body-name" : "tickettype"
      }
    },
    "/tickettypes/{id}" : {
      "delete" : {
        "operationId" : "deleteTicketType",
        "parameters" : [ {
          "description" : "TicketType ID",
          "example" : "alert",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "content" : { },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "tickettype:write" ]
        } ],
        "summary" : "Delete a tickettype",
        "tags" : [ "tickettypes" ]
      },
      "get" : {
        "operationId" : "getTicketType",
        "parameters" : [ {
          "description" : "TicketType ID",
          "example" : "alert",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TicketTypeResponse"
                }
              },
              "test" : {
                "example" : {
                  "default_playbooks" : [ ],
                  "default_template" : "default",
                  "icon" : "mdi-alert",
                  "id" : "alert",
                  "name" : "Alerts"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "tickettype:read" ]
        } ],
        "summary" : "Get a single tickettype",
        "tags" : [ "tickettypes" ]
      },
      "put" : {
        "operationId" : "updateTicketType",
        "parameters" : [ {
          "description" : "TicketType ID",
          "example" : "alert",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/TicketTypeForm"
              }
            }
          },
          "description" : "TicketType object that needs to be added",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TicketTypeResponse"
                }
              },
              "test" : {
                "example" : {
                  "default_playbooks" : [ ],
                  "default_template" : "default",
                  "icon" : "mdi-bell",
                  "id" : "alert",
                  "name" : "Alerts"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "tickettype:write" ]
        } ],
        "summary" : "Update an existing tickettype",
        "tags" : [ "tickettypes" ],
        "x-codegen-request-body-name" : "tickettype"
      }
    },
    "/userdata" : {
      "get" : {
        "operationId" : "listUserData",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/UserDataResponse"
                  },
                  "type" : "array"
                }
              },
              "test" : {
                "example" : [ {
                  "email" : "bob@example.org",
                  "id" : "bob",
                  "name" : "Bob Bad"
                } ]
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "userdata:read" ]
        } ],
        "summary" : "List userdata",
        "tags" : [ "userdata" ]
      }
    },
    "/userdata/{id}" : {
      "get" : {
        "operationId" : "getUserData",
        "parameters" : [ {
          "description" : "User Data ID",
          "example" : "bob",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDataResponse"
                }
              },
              "test" : {
                "example" : {
                  "email" : "bob@example.org",
                  "id" : "bob",
                  "name" : "Bob Bad"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "userdata:read" ]
        } ],
        "summary" : "Get a single user data",
        "tags" : [ "userdata" ]
      },
      "put" : {
        "operationId" : "updateUserData",
        "parameters" : [ {
          "description" : "User Data ID",
          "example" : "bob",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserData"
              }
            }
          },
          "description" : "User data object that needs to be added",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserDataResponse"
                }
              },
              "test" : {
                "example" : {
                  "email" : "bob@example.org",
                  "id" : "bob",
                  "name" : "Bob Bad"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "userdata:write" ]
        } ],
        "summary" : "Update an existing user data",
        "tags" : [ "userdata" ],
        "x-codegen-request-body-name" : "userdata"
      }
    },
    "/users" : {
      "get" : {
        "operationId" : "listUsers",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/UserResponse"
                  },
                  "type" : "array"
                }
              },
              "test" : {
                "example" : [ {
                  "apikey" : false,
                  "blocked" : false,
                  "id" : "bob",
                  "roles" : [ "admin:backup:read", "admin:backup:restore", "admin:group:write", "admin:job:read", "admin:job:write", "admin:log:read", "admin:ticket:delete", "admin:user:write", "admin:userdata:read", "admin:userdata:write", "analyst:automation:read", "analyst:currentsettings:write", "analyst:currentuser:read", "analyst:currentuserdata:read", "analyst:file", "analyst:group:read", "analyst:playbook:read", "analyst:rule:read", "analyst:settings:read", "analyst:template:read", "analyst:ticket:read", "analyst:ticket:write", "analyst:tickettype:read", "analyst:user:read", "engineer:automation:write", "engineer:playbook:write", "engineer:rule:write", "engineer:template:write", "engineer:tickettype:write" ]
                }, {
                  "apikey" : true,
                  "blocked" : false,
                  "id" : "script",
                  "roles" : [ "analyst:automation:read", "analyst:currentsettings:write", "analyst:currentuser:read", "analyst:currentuserdata:read", "analyst:file", "analyst:group:read", "analyst:playbook:read", "analyst:rule:read", "analyst:settings:read", "analyst:template:read", "analyst:ticket:read", "analyst:ticket:write", "analyst:tickettype:read", "analyst:user:read", "engineer:automation:write", "engineer:playbook:write", "engineer:rule:write", "engineer:template:write", "engineer:tickettype:write" ]
                } ]
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "user:read" ]
        } ],
        "summary" : "List users",
        "tags" : [ "users" ]
      },
      "post" : {
        "operationId" : "createUser",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserForm"
              }
            }
          },
          "description" : "user object that needs to be added",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NewUserResponse"
                }
              },
              "test" : {
                "example" : {
                  "blocked" : false,
                  "id" : "syncscript",
                  "roles" : [ "analyst:automation:read", "analyst:currentsettings:write", "analyst:currentuser:read", "analyst:currentuserdata:read", "analyst:file", "analyst:group:read", "analyst:playbook:read", "analyst:rule:read", "analyst:settings:read", "analyst:template:read", "analyst:ticket:read", "analyst:ticket:write", "analyst:tickettype:read", "analyst:user:read" ],
                  "secret" : "v39bOuobnlEljfWzjAgoKzhmnh1xSMxH"
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "user:write" ]
        } ],
        "summary" : "Create user",
        "tags" : [ "users" ],
        "x-codegen-request-body-name" : "user"
      }
    },
    "/users/{id}" : {
      "delete" : {
        "operationId" : "deleteUser",
        "parameters" : [ {
          "description" : "user ID",
          "example" : "script",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "content" : { },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "user:write" ]
        } ],
        "summary" : "Delete user",
        "tags" : [ "users" ]
      },
      "get" : {
        "operationId" : "getUser",
        "parameters" : [ {
          "description" : "user ID",
          "example" : "script",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponse"
                }
              },
              "test" : {
                "example" : {
                  "apikey" : true,
                  "blocked" : false,
                  "id" : "script",
                  "roles" : [ "analyst:automation:read", "analyst:currentsettings:write", "analyst:currentuser:read", "analyst:currentuserdata:read", "analyst:file", "analyst:group:read", "analyst:playbook:read", "analyst:rule:read", "analyst:settings:read", "analyst:template:read", "analyst:ticket:read", "analyst:ticket:write", "analyst:tickettype:read", "analyst:user:read", "engineer:automation:write", "engineer:playbook:write", "engineer:rule:write", "engineer:template:write", "engineer:tickettype:write" ]
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "user:read" ]
        } ],
        "summary" : "Get a single user",
        "tags" : [ "users" ]
      },
      "put" : {
        "operationId" : "updateUser",
        "parameters" : [ {
          "description" : "Template ID",
          "example" : "bob",
          "in" : "path",
          "name" : "id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserForm"
              }
            }
          },
          "description" : "user object that needs to be added",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserResponse"
                }
              },
              "test" : {
                "example" : {
                  "apikey" : false,
                  "blocked" : false,
                  "id" : "bob",
                  "roles" : [ "admin:backup:read", "admin:backup:restore", "admin:group:write", "admin:job:read", "admin:job:write", "admin:log:read", "admin:ticket:delete", "admin:user:write", "admin:userdata:read", "admin:userdata:write", "analyst:automation:read", "analyst:currentsettings:write", "analyst:currentuser:read", "analyst:currentuserdata:read", "analyst:file", "analyst:group:read", "analyst:playbook:read", "analyst:rule:read", "analyst:settings:read", "analyst:template:read", "analyst:ticket:read", "analyst:ticket:write", "analyst:tickettype:read", "analyst:user:read", "engineer:automation:write", "engineer:playbook:write", "engineer:rule:write", "engineer:template:write", "engineer:tickettype:write" ]
                }
              }
            },
            "description" : "successful operation"
          }
        },
        "security" : [ {
          "roles" : [ "user:write" ]
        } ],
        "summary" : "Update user",
        "tags" : [ "users" ],
        "x-codegen-request-body-name" : "user"
      }
    }
  },
  "components" : {
    "schemas" : {
      "Artifact" : {
        "properties" : {
          "enrichments" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Enrichment"
            },
            "type" : "object"
          },
          "name" : {
            "example" : "2.2.2.2",
            "type" : "string"
          },
          "status" : {
            "example" : "Unknown",
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        },
        "required" : [ "name" ],
        "type" : "object"
      },
      "ArtifactOrigin" : {
        "properties" : {
          "artifact" : {
            "type" : "string"
          },
          "ticket_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "artifact", "ticket_id" ],
        "type" : "object"
      },
      "Automation" : {
        "properties" : {
          "image" : {
            "type" : "string"
          },
          "schema" : {
            "example" : "{}",
            "type" : "string"
          },
          "script" : {
            "type" : "string"
          },
          "type" : {
            "items" : {
              "enum" : [ "artifact", "playbook", "global" ],
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "image", "script", "type" ],
        "type" : "object"
      },
      "AutomationForm" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "image" : {
            "type" : "string"
          },
          "schema" : {
            "example" : "{}",
            "type" : "string"
          },
          "script" : {
            "type" : "string"
          },
          "type" : {
            "items" : {
              "enum" : [ "artifact", "playbook", "global" ],
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "id", "image", "script", "type" ],
        "type" : "object"
      },
      "AutomationResponse" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "image" : {
            "type" : "string"
          },
          "schema" : {
            "example" : "{}",
            "type" : "string"
          },
          "script" : {
            "type" : "string"
          },
          "type" : {
            "items" : {
              "enum" : [ "artifact", "playbook", "global" ],
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "id", "image", "script", "type" ],
        "type" : "object"
      },
      "Comment" : {
        "properties" : {
          "created" : {
            "format" : "date-time",
            "type" : "string"
          },
          "creator" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        },
        "required" : [ "created", "creator", "message" ],
        "type" : "object"
      },
      "CommentForm" : {
        "properties" : {
          "created" : {
            "format" : "date-time",
            "type" : "string"
          },
          "creator" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          }
        },
        "required" : [ "message" ],
        "type" : "object"
      },
      "Context" : {
        "properties" : {
          "artifact" : {
            "$ref" : "#/components/schemas/Artifact"
          },
          "playbook" : {
            "$ref" : "#/components/schemas/PlaybookResponse"
          },
          "task" : {
            "$ref" : "#/components/schemas/TaskResponse"
          },
          "ticket" : {
            "$ref" : "#/components/schemas/TicketResponse"
          }
        },
        "type" : "object"
      },
      "Enrichment" : {
        "properties" : {
          "created" : {
            "format" : "date-time",
            "type" : "string"
          },
          "data" : {
            "example" : {
              "hash" : "b7a067a742c20d07a7456646de89bc2d408a1153"
            },
            "properties" : { },
            "type" : "object"
          },
          "name" : {
            "example" : "hash.sha1",
            "type" : "string"
          }
        },
        "required" : [ "created", "data", "name" ],
        "type" : "object"
      },
      "EnrichmentForm" : {
        "properties" : {
          "data" : {
            "example" : {
              "hash" : "b7a067a742c20d07a7456646de89bc2d408a1153"
            },
            "properties" : { },
            "type" : "object"
          },
          "name" : {
            "example" : "hash.sha1",
            "type" : "string"
          }
        },
        "required" : [ "data", "name" ],
        "type" : "object"
      },
      "File" : {
        "properties" : {
          "key" : {
            "example" : "myfile",
            "type" : "string"
          },
          "name" : {
            "example" : "notes.docx",
            "type" : "string"
          }
        },
        "required" : [ "key", "name" ],
        "type" : "object"
      },
      "Job" : {
        "properties" : {
          "automation" : {
            "type" : "string"
          },
          "container" : {
            "type" : "string"
          },
          "log" : {
            "type" : "string"
          },
          "origin" : {
            "$ref" : "#/components/schemas/Origin"
          },
          "output" : {
            "properties" : { },
            "type" : "object"
          },
          "payload" : {
            "type" : "object"
          },
          "running" : {
            "type" : "boolean"
          },
          "status" : {
            "type" : "string"
          }
        },
        "required" : [ "automation", "running", "status" ],
        "type" : "object"
      },
      "JobForm" : {
        "properties" : {
          "automation" : {
            "type" : "string"
          },
          "origin" : {
            "$ref" : "#/components/schemas/Origin"
          },
          "payload" : {
            "type" : "object"
          }
        },
        "required" : [ "automation" ],
        "type" : "object"
      },
      "JobResponse" : {
        "properties" : {
          "automation" : {
            "type" : "string"
          },
          "container" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "log" : {
            "type" : "string"
          },
          "origin" : {
            "$ref" : "#/components/schemas/Origin"
          },
          "output" : {
            "properties" : { },
            "type" : "object"
          },
          "payload" : {
            "type" : "object"
          },
          "status" : {
            "type" : "string"
          }
        },
        "required" : [ "automation", "id", "status" ],
        "type" : "object"
      },
      "LogEntry" : {
        "properties" : {
          "created" : {
            "format" : "date-time",
            "type" : "string"
          },
          "creator" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "reference" : {
            "type" : "string"
          }
        },
        "required" : [ "created", "creator", "message", "reference" ],
        "type" : "object"
      },
      "Message" : {
        "properties" : {
          "context" : {
            "$ref" : "#/components/schemas/Context"
          },
          "payload" : {
            "properties" : { },
            "type" : "object"
          },
          "secrets" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "type" : "object"
          }
        },
        "type" : "object"
      },
      "NewUserResponse" : {
        "properties" : {
          "blocked" : {
            "type" : "boolean"
          },
          "id" : {
            "type" : "string"
          },
          "roles" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "secret" : {
            "type" : "string"
          }
        },
        "required" : [ "blocked", "id", "roles" ],
        "type" : "object"
      },
      "Origin" : {
        "properties" : {
          "artifact_origin" : {
            "$ref" : "#/components/schemas/ArtifactOrigin"
          },
          "task_origin" : {
            "$ref" : "#/components/schemas/TaskOrigin"
          }
        },
        "type" : "object"
      },
      "Playbook" : {
        "properties" : {
          "name" : {
            "example" : "Phishing",
            "type" : "string"
          },
          "tasks" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Task"
            },
            "type" : "object"
          }
        },
        "required" : [ "name", "tasks" ],
        "type" : "object"
      },
      "PlaybookResponse" : {
        "properties" : {
          "name" : {
            "example" : "Phishing",
            "type" : "string"
          },
          "tasks" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/TaskResponse"
            },
            "type" : "object"
          }
        },
        "required" : [ "name", "tasks" ],
        "type" : "object"
      },
      "PlaybookTemplate" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "yaml" : {
            "type" : "string"
          }
        },
        "required" : [ "name", "yaml" ],
        "type" : "object"
      },
      "PlaybookTemplateForm" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "yaml" : {
            "type" : "string"
          }
        },
        "required" : [ "yaml" ],
        "type" : "object"
      },
      "PlaybookTemplateResponse" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "yaml" : {
            "type" : "string"
          }
        },
        "required" : [ "id", "name", "yaml" ],
        "type" : "object"
      },
      "Reference" : {
        "properties" : {
          "href" : {
            "example" : "https://cve.mitre.org/cgi-bin/cvename.cgi?name=cve-2017-0144",
            "type" : "string"
          },
          "name" : {
            "example" : "CVE-2017-0144",
            "type" : "string"
          }
        },
        "required" : [ "href", "name" ],
        "type" : "object"
      },
      "Settings" : {
        "properties" : {
          "artifactStates" : {
            "items" : {
              "$ref" : "#/components/schemas/Type"
            },
            "title" : "Artifact States",
            "type" : "array"
          },
          "roles" : {
            "items" : {
              "type" : "string"
            },
            "title" : "Roles",
            "type" : "array"
          },
          "ticketTypes" : {
            "items" : {
              "$ref" : "#/components/schemas/TicketTypeResponse"
            },
            "title" : "Ticket Types",
            "type" : "array"
          },
          "tier" : {
            "enum" : [ "community", "enterprise" ],
            "title" : "Tier",
            "type" : "string"
          },
          "timeformat" : {
            "title" : "Time Format",
            "type" : "string"
          },
          "version" : {
            "title" : "Version",
            "type" : "string"
          }
        },
        "required" : [ "artifactStates", "ticketTypes", "tier", "timeformat", "version" ],
        "type" : "object"
      },
      "Statistics" : {
        "properties" : {
          "open_tickets_per_user" : {
            "additionalProperties" : {
              "type" : "integer"
            },
            "type" : "object"
          },
          "tickets_per_type" : {
            "additionalProperties" : {
              "type" : "integer"
            },
            "type" : "object"
          },
          "tickets_per_week" : {
            "additionalProperties" : {
              "type" : "integer"
            },
            "type" : "object"
          },
          "unassigned" : {
            "type" : "integer"
          }
        },
        "required" : [ "open_tickets_per_user", "tickets_per_type", "tickets_per_week", "unassigned" ],
        "type" : "object"
      },
      "Task" : {
        "properties" : {
          "automation" : {
            "type" : "string"
          },
          "closed" : {
            "format" : "date-time",
            "type" : "string"
          },
          "created" : {
            "format" : "date-time",
            "type" : "string"
          },
          "data" : {
            "properties" : { },
            "type" : "object"
          },
          "done" : {
            "type" : "boolean"
          },
          "join" : {
            "example" : false,
            "type" : "boolean"
          },
          "name" : {
            "example" : "Inform user",
            "type" : "string"
          },
          "next" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "type" : "object"
          },
          "owner" : {
            "type" : "string"
          },
          "payload" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "type" : "object"
          },
          "schema" : {
            "properties" : { },
            "type" : "object"
          },
          "type" : {
            "enum" : [ "task", "input", "automation" ],
            "example" : "task",
            "type" : "string"
          }
        },
        "required" : [ "created", "done", "name", "type" ],
        "type" : "object"
      },
      "TaskForm" : {
        "properties" : {
          "automation" : {
            "type" : "string"
          },
          "closed" : {
            "format" : "date-time",
            "type" : "string"
          },
          "created" : {
            "format" : "date-time",
            "type" : "string"
          },
          "data" : {
            "properties" : { },
            "type" : "object"
          },
          "done" : {
            "type" : "boolean"
          },
          "join" : {
            "example" : false,
            "type" : "boolean"
          },
          "name" : {
            "example" : "Inform user",
            "type" : "string"
          },
          "next" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "type" : "object"
          },
          "owner" : {
            "type" : "string"
          },
          "payload" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "type" : "object"
          },
          "schema" : {
            "properties" : { },
            "type" : "object"
          },
          "type" : {
            "enum" : [ "task", "input", "automation" ],
            "example" : "task",
            "type" : "string"
          }
        },
        "required" : [ "name", "type" ],
        "type" : "object"
      },
      "TaskOrigin" : {
        "properties" : {
          "playbook_id" : {
            "type" : "string"
          },
          "task_id" : {
            "type" : "string"
          },
          "ticket_id" : {
            "format" : "int64",
            "type" : "integer"
          }
        },
        "required" : [ "playbook_id", "task_id", "ticket_id" ],
        "type" : "object"
      },
      "TaskResponse" : {
        "properties" : {
          "active" : {
            "example" : false,
            "type" : "boolean"
          },
          "automation" : {
            "type" : "string"
          },
          "closed" : {
            "format" : "date-time",
            "type" : "string"
          },
          "created" : {
            "format" : "date-time",
            "type" : "string"
          },
          "data" : {
            "properties" : { },
            "type" : "object"
          },
          "done" : {
            "type" : "boolean"
          },
          "join" : {
            "example" : false,
            "type" : "boolean"
          },
          "name" : {
            "example" : "Inform user",
            "type" : "string"
          },
          "next" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "type" : "object"
          },
          "order" : {
            "example" : 2.0,
            "format" : "int64",
            "type" : "number"
          },
          "owner" : {
            "type" : "string"
          },
          "payload" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "type" : "object"
          },
          "schema" : {
            "properties" : { },
            "type" : "object"
          },
          "type" : {
            "enum" : [ "task", "input", "automation" ],
            "example" : "task",
            "type" : "string"
          }
        },
        "required" : [ "active", "created", "done", "name", "order", "type" ],
        "type" : "object"
      },
      "TaskWithContext" : {
        "properties" : {
          "playbook_id" : {
            "type" : "string"
          },
          "playbook_name" : {
            "type" : "string"
          },
          "task" : {
            "$ref" : "#/components/schemas/TaskResponse"
          },
          "task_id" : {
            "type" : "string"
          },
          "ticket_id" : {
            "format" : "int64",
            "type" : "number"
          },
          "ticket_name" : {
            "type" : "string"
          }
        },
        "required" : [ "playbook_id", "playbook_name", "task", "task_id", "ticket_id", "ticket_name" ],
        "type" : "object"
      },
      "Ticket" : {
        "properties" : {
          "artifacts" : {
            "items" : {
              "$ref" : "#/components/schemas/Artifact"
            },
            "type" : "array"
          },
          "comments" : {
            "items" : {
              "$ref" : "#/components/schemas/Comment"
            },
            "type" : "array"
          },
          "created" : {
            "format" : "date-time",
            "type" : "string"
          },
          "details" : {
            "example" : {
              "description" : "my little incident"
            },
            "properties" : { },
            "type" : "object"
          },
          "files" : {
            "items" : {
              "$ref" : "#/components/schemas/File"
            },
            "type" : "array"
          },
          "modified" : {
            "format" : "date-time",
            "type" : "string"
          },
          "name" : {
            "example" : "WannyCry",
            "type" : "string"
          },
          "owner" : {
            "example" : "bob",
            "type" : "string"
          },
          "playbooks" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Playbook"
            },
            "type" : "object"
          },
          "read" : {
            "example" : [ "bob" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "references" : {
            "items" : {
              "$ref" : "#/components/schemas/Reference"
            },
            "type" : "array"
          },
          "schema" : {
            "example" : "{}",
            "type" : "string"
          },
          "status" : {
            "example" : "open",
            "type" : "string"
          },
          "type" : {
            "example" : "incident",
            "type" : "string"
          },
          "write" : {
            "example" : [ "alice" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "created", "modified", "name", "schema", "status", "type" ],
        "type" : "object"
      },
      "TicketForm" : {
        "properties" : {
          "artifacts" : {
            "items" : {
              "$ref" : "#/components/schemas/Artifact"
            },
            "type" : "array"
          },
          "comments" : {
            "items" : {
              "$ref" : "#/components/schemas/Comment"
            },
            "type" : "array"
          },
          "created" : {
            "format" : "date-time",
            "type" : "string"
          },
          "details" : {
            "example" : {
              "description" : "my little incident"
            },
            "properties" : { },
            "type" : "object"
          },
          "files" : {
            "items" : {
              "$ref" : "#/components/schemas/File"
            },
            "type" : "array"
          },
          "id" : {
            "example" : 123,
            "format" : "int64",
            "type" : "integer"
          },
          "modified" : {
            "format" : "date-time",
            "type" : "string"
          },
          "name" : {
            "example" : "WannyCry",
            "type" : "string"
          },
          "owner" : {
            "example" : "bob",
            "type" : "string"
          },
          "playbooks" : {
            "items" : {
              "$ref" : "#/components/schemas/PlaybookTemplateForm"
            },
            "type" : "array"
          },
          "read" : {
            "example" : [ "bob" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "references" : {
            "items" : {
              "$ref" : "#/components/schemas/Reference"
            },
            "type" : "array"
          },
          "schema" : {
            "example" : "{}",
            "type" : "string"
          },
          "status" : {
            "example" : "open",
            "type" : "string"
          },
          "type" : {
            "example" : "incident",
            "type" : "string"
          },
          "write" : {
            "example" : [ "alice" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "name", "status", "type" ],
        "type" : "object"
      },
      "TicketList" : {
        "properties" : {
          "count" : {
            "example" : 3.0,
            "type" : "number"
          },
          "tickets" : {
            "items" : {
              "$ref" : "#/components/schemas/TicketSimpleResponse"
            },
            "type" : "array"
          }
        },
        "required" : [ "count", "tickets" ],
        "type" : "object"
      },
      "TicketResponse" : {
        "properties" : {
          "artifacts" : {
            "items" : {
              "$ref" : "#/components/schemas/Artifact"
            },
            "type" : "array"
          },
          "comments" : {
            "items" : {
              "$ref" : "#/components/schemas/Comment"
            },
            "type" : "array"
          },
          "created" : {
            "format" : "date-time",
            "type" : "string"
          },
          "details" : {
            "example" : {
              "description" : "my little incident"
            },
            "properties" : { },
            "type" : "object"
          },
          "files" : {
            "items" : {
              "$ref" : "#/components/schemas/File"
            },
            "type" : "array"
          },
          "id" : {
            "example" : 123,
            "format" : "int64",
            "type" : "integer"
          },
          "modified" : {
            "format" : "date-time",
            "type" : "string"
          },
          "name" : {
            "example" : "WannyCry",
            "type" : "string"
          },
          "owner" : {
            "example" : "bob",
            "type" : "string"
          },
          "playbooks" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PlaybookResponse"
            },
            "type" : "object"
          },
          "read" : {
            "example" : [ "bob" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "references" : {
            "items" : {
              "$ref" : "#/components/schemas/Reference"
            },
            "type" : "array"
          },
          "schema" : {
            "example" : "{}",
            "type" : "string"
          },
          "status" : {
            "example" : "open",
            "type" : "string"
          },
          "type" : {
            "example" : "incident",
            "type" : "string"
          },
          "write" : {
            "example" : [ "alice" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "created", "id", "modified", "name", "schema", "status", "type" ],
        "type" : "object"
      },
      "TicketSimpleResponse" : {
        "properties" : {
          "artifacts" : {
            "items" : {
              "$ref" : "#/components/schemas/Artifact"
            },
            "type" : "array"
          },
          "comments" : {
            "items" : {
              "$ref" : "#/components/schemas/Comment"
            },
            "type" : "array"
          },
          "created" : {
            "format" : "date-time",
            "type" : "string"
          },
          "details" : {
            "example" : {
              "description" : "my little incident"
            },
            "properties" : { },
            "type" : "object"
          },
          "files" : {
            "items" : {
              "$ref" : "#/components/schemas/File"
            },
            "type" : "array"
          },
          "id" : {
            "example" : 123,
            "format" : "int64",
            "type" : "integer"
          },
          "modified" : {
            "format" : "date-time",
            "type" : "string"
          },
          "name" : {
            "example" : "WannyCry",
            "type" : "string"
          },
          "owner" : {
            "example" : "bob",
            "type" : "string"
          },
          "playbooks" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/Playbook"
            },
            "type" : "object"
          },
          "read" : {
            "example" : [ "bob" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "references" : {
            "items" : {
              "$ref" : "#/components/schemas/Reference"
            },
            "type" : "array"
          },
          "schema" : {
            "example" : "{}",
            "type" : "string"
          },
          "status" : {
            "example" : "open",
            "type" : "string"
          },
          "type" : {
            "example" : "incident",
            "type" : "string"
          },
          "write" : {
            "example" : [ "alice" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "created", "id", "modified", "name", "schema", "status", "type" ],
        "type" : "object"
      },
      "TicketTemplate" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "schema" : {
            "type" : "string"
          }
        },
        "required" : [ "name", "schema" ],
        "type" : "object"
      },
      "TicketTemplateForm" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "schema" : {
            "type" : "string"
          }
        },
        "required" : [ "name", "schema" ],
        "type" : "object"
      },
      "TicketTemplateResponse" : {
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "schema" : {
            "type" : "string"
          }
        },
        "required" : [ "id", "name", "schema" ],
        "type" : "object"
      },
      "TicketType" : {
        "properties" : {
          "default_groups" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "default_playbooks" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "default_template" : {
            "type" : "string"
          },
          "icon" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        },
        "required" : [ "default_playbooks", "default_template", "icon", "name" ],
        "type" : "object"
      },
      "TicketTypeForm" : {
        "properties" : {
          "default_groups" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "default_playbooks" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "default_template" : {
            "type" : "string"
          },
          "icon" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        },
        "required" : [ "default_playbooks", "default_template", "icon", "name" ],
        "type" : "object"
      },
      "TicketTypeResponse" : {
        "properties" : {
          "default_groups" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "default_playbooks" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "default_template" : {
            "type" : "string"
          },
          "icon" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        },
        "required" : [ "default_playbooks", "default_template", "icon", "id", "name" ],
        "type" : "object"
      },
      "TicketWithTickets" : {
        "properties" : {
          "artifacts" : {
            "items" : {
              "$ref" : "#/components/schemas/Artifact"
            },
            "type" : "array"
          },
          "comments" : {
            "items" : {
              "$ref" : "#/components/schemas/Comment"
            },
            "type" : "array"
          },
          "created" : {
            "format" : "date-time",
            "type" : "string"
          },
          "details" : {
            "example" : {
              "description" : "my little incident"
            },
            "properties" : { },
            "type" : "object"
          },
          "files" : {
            "items" : {
              "$ref" : "#/components/schemas/File"
            },
            "type" : "array"
          },
          "id" : {
            "example" : 123,
            "format" : "int64",
            "type" : "integer"
          },
          "modified" : {
            "format" : "date-time",
            "type" : "string"
          },
          "name" : {
            "example" : "WannyCry",
            "type" : "string"
          },
          "owner" : {
            "example" : "bob",
            "type" : "string"
          },
          "playbooks" : {
            "additionalProperties" : {
              "$ref" : "#/components/schemas/PlaybookResponse"
            },
            "type" : "object"
          },
          "read" : {
            "example" : [ "bob" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "references" : {
            "items" : {
              "$ref" : "#/components/schemas/Reference"
            },
            "type" : "array"
          },
          "schema" : {
            "example" : "{}",
            "type" : "string"
          },
          "status" : {
            "example" : "open",
            "type" : "string"
          },
          "tickets" : {
            "items" : {
              "$ref" : "#/components/schemas/TicketSimpleResponse"
            },
            "type" : "array"
          },
          "type" : {
            "example" : "incident",
            "type" : "string"
          },
          "write" : {
            "example" : [ "alice" ],
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "created", "id", "modified", "name", "schema", "status", "type" ],
        "type" : "object"
      },
      "Type" : {
        "properties" : {
          "color" : {
            "enum" : [ "error", "info", "success", "warning" ],
            "title" : "Color",
            "type" : "string",
            "x-cols" : 3
          },
          "icon" : {
            "title" : "Icon (https://materialdesignicons.com)",
            "type" : "string",
            "x-cols" : 3,
            "x-class" : "pr-2"
          },
          "id" : {
            "title" : "ID",
            "type" : "string",
            "x-cols" : 3,
            "x-class" : "pr-2"
          },
          "name" : {
            "title" : "Name",
            "type" : "string",
            "x-cols" : 3,
            "x-class" : "pr-2"
          }
        },
        "required" : [ "icon", "id", "name" ],
        "type" : "object"
      },
      "User" : {
        "properties" : {
          "apikey" : {
            "type" : "boolean"
          },
          "blocked" : {
            "type" : "boolean"
          },
          "roles" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "sha256" : {
            "type" : "string"
          }
        },
        "required" : [ "apikey", "blocked", "roles" ],
        "type" : "object"
      },
      "UserData" : {
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "image" : {
            "type" : "string",
            "x-display" : "custom-avatar"
          },
          "name" : {
            "type" : "string"
          },
          "timeformat" : {
            "title" : "Time Format (https://moment.github.io/luxon/docs/manual/formatting.html#table-of-tokens)",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "UserDataResponse" : {
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "image" : {
            "type" : "string",
            "x-display" : "custom-avatar"
          },
          "name" : {
            "type" : "string"
          },
          "timeformat" : {
            "title" : "Time Format (https://moment.github.io/luxon/docs/manual/formatting.html#table-of-tokens)",
            "type" : "string"
          }
        },
        "required" : [ "id" ],
        "type" : "object"
      },
      "UserForm" : {
        "properties" : {
          "apikey" : {
            "type" : "boolean"
          },
          "blocked" : {
            "type" : "boolean"
          },
          "id" : {
            "type" : "string"
          },
          "roles" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "apikey", "blocked", "id", "roles" ],
        "type" : "object"
      },
      "UserResponse" : {
        "properties" : {
          "apikey" : {
            "type" : "boolean"
          },
          "blocked" : {
            "type" : "boolean"
          },
          "id" : {
            "type" : "string"
          },
          "roles" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "required" : [ "apikey", "blocked", "id", "roles" ],
        "type" : "object"
      }
    }
  },
  "x-original-swagger-version" : "2.0"
}